@use '../config';

// Selection
// ---------
/// Selected text is inverted.
/// @group type
/// @example html
///   <p>Select this text to preview</p>
::selection {
  background-color: var(--text);
  color: var(--bg);
}

// Font Loading
// ------------
/// Hide the page visually while fonts are loading,
/// to avoid a flash of unstyled text.
/// @group type
.wf-loading {
  @include config.is-hidden;
}

h1,
h2,
h3 {
  font-weight: normal;
  margin: 0;
}

[data-heading] {
  font-size: var(--heading-size, var(--medium));
}

[data-heading~='large'] {
  --heading-size: var(--large);

  line-height: 1.1;
}

@mixin heading() {
  display: block;
  font-size: var(--heading-size, var(--label-size));
  letter-spacing: var(--heading-letterspacing, 0.05rem);
  margin-block-end: var(--label-margin-block-end, 0);
  text-transform: var(--heading-transform, uppercase);
}

.section-heading {
  @include heading;

  @include config.below('sm-page-break') {
    --heading-size: var(--medium);
  }
}

p {
  margin: 0;
}

strong {
  font-weight: bold;
}

[data-color-info] {
  display: block;
  color: var(--color-info-color);
}

[data-color-info~='warning'] {
  --color-info-color: var(--warning);

  background: var(--warning-bg, transparent);
  font-size: var(--color-info-size, var(--warning-size));
  margin-bottom: var(--warning-margin-bottom);
  padding-block: var(--warning-padding-block);
  text-align: var(--warning-align, left);

  main > & {
    --warning-bg: var(--bg-messages);
    --warning-margin-bottom: var(--double-gutter);
    --warning-padding-block: var(--gutter);
    --warning-align: center;
  }
}

[data-color-info~='value'],
[data-input='color'] {
  font-size: var(--tool-font-size, var(--small));

  // Container widths here were determined by when the longer color values (p3)
  // would overflow the container
  @container tool (min-width: 15rem) {
    --tool-font-size: 5cqi;
  }

  @container tool (min-width: 21rem) {
    --tool-font-size: var(--input-small);
  }

  @container tool (min-width: 25rem) {
    --tool-font-size: var(--medium);
  }
}

// Allow input to continue its font-size growth once more
[data-input='color'] {
  @container tool (min-width: 30rem) {
    --tool-font-size: var(--input-large);
  }
}
