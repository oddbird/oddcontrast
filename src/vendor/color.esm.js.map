{"version":3,"file":"color.esm.js","sources":["../src/multiply-matrices.js","../src/util.js","../src/hooks.js","../src/color.js","../src/spaces/lab.js","../src/angles.js","../src/spaces/lch.js","../src/spaces/srgb.js","../src/spaces/srgb-linear.js","../src/spaces/hsl.js","../src/spaces/hwb.js","../src/spaces/hsv.js","../src/spaces/p3.js","../src/spaces/a98rgb.js","../src/spaces/prophoto.js","../src/spaces/rec2020.js","../src/spaces/absxyzd65.js","../src/spaces/jzazbz.js","../src/spaces/jzczhz.js","../src/spaces/ictcp.js","../src/spaces/rec2100.js","../src/spaces/oklab.js","../src/spaces/oklch.js","../src/CATs.js","../src/spaces/acescc.js","../src/interpolation.js","../src/deltaE/deltaECMC.js","../src/deltaE/deltaE2000.js","../src/deltaE/deltaEJz.js","../src/deltaE/deltaEITP.js","../src/deltaE/deltaEOK.js","../src/keywords.js","../src/main.js"],"sourcesContent":["// A is m x n. B is n x p. product is m x p.\nexport default function multiplyMatrices(A, B) {\n\tlet m = A.length;\n\n\tif (!Array.isArray(A[0])) {\n\t\t// A is vector, convert to [[a, b, c, ...]]\n\t\tA = [A];\n\t}\n\n\tif (!Array.isArray(B[0])) {\n\t\t// B is vector, convert to [[a], [b], [c], ...]]\n\t\tB = B.map(x => [x]);\n\t}\n\n\tlet p = B[0].length;\n\tlet B_cols = B[0].map((_, i) => B.map(x => x[i])); // transpose B\n\tlet product = A.map(row => B_cols.map(col => {\n\t\tif (!Array.isArray(row)) {\n\t\t\treturn col.reduce((a, c) => a + c * row, 0);\n\t\t}\n\n\t\treturn row.reduce((a, c, i) => a + c * (col[i] || 0), 0);\n\t}));\n\n\tif (m === 1) {\n\t\tproduct = product[0]; // Avoid [[a, b, c, ...]]\n\t}\n\n\tif (p === 1) {\n\t\treturn product.map(x => x[0]); // Avoid [[a], [b], [c], ...]]\n\t}\n\n\treturn product;\n}\n","import Color from \"./color.js\";\nimport multiplyMatrices from \"./multiply-matrices.js\";\n\n/**\n * Check if a value is a string (including a String object)\n * @param {*} str - Value to check\n * @returns {boolean}\n */\nexport function isString (str) {\n\treturn type(str) === \"string\";\n}\n\n/**\n * Determine the internal JavaScript [[Class]] of an object.\n * @param {*} o - Value to check\n * @returns {string}\n */\nexport function type (o) {\n\tlet str = Object.prototype.toString.call(o);\n\n\treturn (str.match(/^\\[object\\s+(.*?)\\]$/)[1] || \"\").toLowerCase();\n}\n\n/**\n * Like Object.assign() but copies property descriptors (including symbols)\n * @param {Object} target - Object to copy to\n * @param {...Object} sources - Objects to copy from\n * @returns {Object} target\n */\nexport function extend (target, ...sources) {\n\tfor (let source of sources) {\n\t\tif (source) {\n\t\t\tlet descriptors = Object.getOwnPropertyDescriptors(source);\n\t\t\tObject.defineProperties(target, descriptors);\n\t\t}\n\t}\n\n\treturn target;\n}\n\n/**\n * Copy a descriptor from one object to another\n * @param {Object} target - Object to copy to\n * @param {Object} source - Object to copy from\n * @param {string} prop - Name of property\n */\nexport function copyDescriptor (target, source, prop) {\n\tlet descriptor = Object.getOwnPropertyDescriptor(source, prop);\n\tObject.defineProperty(target, prop, descriptor);\n}\n\n/**\n * Uppercase the first letter of a string\n * @param {string} str - String to capitalize\n * @returns Capitalized string\n */\nexport function capitalize(str) {\n\tif (!str) {\n\t\treturn str;\n\t}\n\n\treturn str[0].toUpperCase() + str.slice(1);\n}\n\n/**\n * Round a number to a certain number of significant digits based on a range\n * @param {number} n - The number to round\n * @param {number} precision - Number of significant digits\n */\nexport function toPrecision(n, precision) {\n\tprecision = +precision;\n\tlet integerLength = (Math.floor(n) + \"\").length;\n\n\tif (precision > integerLength) {\n\t\treturn +n.toFixed(precision - integerLength);\n\t}\n\telse {\n\t\tlet p10 = 10 ** (integerLength - precision);\n\t\treturn Math.round(n / p10) * p10;\n\t}\n}\n\nexport function parseCoord(coord) {\n\tif (coord.indexOf(\".\") > 0) {\n\t\t// Reduce a coordinate of a certain color space until the color is in gamut\n\t\tlet [spaceId, coordName] = coord.split(\".\");\n\t\tlet space = Color.space(spaceId);\n\n\t\tif (!(coordName in space.coords)) {\n\t\t\tthrow new ReferenceError(`Color space \"${space.name}\" has no \"${coordName}\" coordinate.`);\n\t\t}\n\n\t\treturn [space, coordName];\n\t}\n}\n\nexport function value(obj, prop, value) {\n\tlet props = prop.split(\".\");\n\tlet lastProp = props.pop();\n\n\tobj = props.reduceRight((acc, cur) => {\n\t\treturn acc && acc[cur];\n\t}, obj);\n\n\tif (obj) {\n\t\tif (value === undefined) {\n\t\t\t// Get\n\t\t\treturn obj[lastProp];\n\t\t}\n\t\telse {\n\t\t\t// Set\n\t\t\treturn obj[lastProp] = value;\n\t\t}\n\t}\n}\n\nexport {multiplyMatrices};\n","/**\n * Module version of Bliss.Hooks.\n * @author Lea Verou\n */\nexport default class Hooks {\n\tadd (name, callback, first) {\n\t\tif (typeof arguments[0] != \"string\") {\n\t\t\t// Multiple hooks\n\t\t\tfor (var name in arguments[0]) {\n\t\t\t\tthis.add(name, arguments[0][name], arguments[1]);\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\t(Array.isArray(name)? name : [name]).forEach(function(name) {\n\t\t\tthis[name] = this[name] || [];\n\n\t\t\tif (callback) {\n\t\t\t\tthis[name][first? \"unshift\" : \"push\"](callback);\n\t\t\t}\n\t\t}, this);\n\t}\n\n\trun (name, env) {\n\t\tthis[name] = this[name] || [];\n\t\tthis[name].forEach(function(callback) {\n\t\t\tcallback.call(env && env.context? env.context : env, env);\n\t\t});\n\t}\n};\n","import * as util from \"./util.js\";\nimport Hooks from \"./hooks.js\";\n\nconst ε = .000075;\nconst hasDOM = typeof document !== \"undefined\";\n\nexport default class Color {\n\t// Signatures:\n\t// new Color(stringToParse)\n\t// new Color(otherColor)\n\t// new Color(coords, alpha) // defaults to sRGB\n\t// new Color(CSS variable [, root])\n\tconstructor (...args) {\n\t\tlet str, color;\n\n\t\t// new Color(color)\n\t\t// new Color({spaceId, coords})\n\t\t// new Color({space, coords})\n\t\tif (args[0] && typeof args[0] === \"object\" && (args[0].space || args[0].spaceId) && args[0].coords) {\n\t\t\tcolor = args[0];\n\t\t}\n\t\telse if (util.isString(args[0])) {\n\t\t\t// new Color(\"--foo\" [, root])\n\t\t\tif (hasDOM && args[0].indexOf(\"--\") === 0) {\n\t\t\t\t// CSS variable\n\t\t\t\tlet root = arguments[1] && arguments[1].nodeType === 1? arguments[1] : document.documentElement;\n\t\t\t\tstr = getComputedStyle(root).getPropertyValue(arguments[0]);\n\t\t\t}\n\t\t\t // new Color(string)\n\t\t\telse if (args.length === 1) {\n\t\t\t\tstr = args[0];\n\t\t\t}\n\n\t\t\tif (str) {\n\t\t\t\tcolor = Color.parse(str);\n\t\t\t}\n\t\t}\n\n\t\tif (color) {\n\t\t\tif (\"spaceId\" in color) {\n\t\t\t\tthis.spaceId = color.spaceId;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.space = color.space;\n\t\t\t}\n\n\t\t\tthis.coords = color.coords.slice();\n\t\t\tthis.alpha = color.alpha;\n\t\t}\n\t\telse { // default signature new Color([ColorSpace,] array [, alpha])\n\t\t\tlet spaceId, coords, alpha;\n\n\t\t\tif (Array.isArray(args[0])) {\n\t\t\t\t// No color space provided, default to sRGB\n\t\t\t\t[spaceId, coords, alpha] = [\"sRGB\", ...args];\n\t\t\t}\n\t\t\telse {\n\t\t\t\t[spaceId, coords, alpha] = args;\n\t\t\t}\n\n\t\t\tthis.spaceId = spaceId || \"sRGB\";\n\t\t\tthis.coords = coords? coords.slice() : [0, 0, 0];\n\t\t\tthis.alpha = alpha;\n\t\t}\n\n\t\tthis.alpha = this.alpha < 1? this.alpha : 1; // this also deals with NaN etc\n\n\t\t// Convert \"NaN\" to NaN\n\t\tfor (let i = 0; i < this.coords.length; i++) {\n\t\t\tif (this.coords[i] === \"NaN\") {\n\t\t\t\tthis.coords[i] = NaN;\n\t\t\t}\n\t\t}\n\t}\n\n\tget space () {\n\t\treturn Color.spaces[this.spaceId];\n\t}\n\n\tset space (value) {\n\t\t// Setting spaceId works with color space objects too\n\t\treturn this.spaceId = value;\n\t}\n\n\tget spaceId () {\n\t\treturn this._spaceId;\n\t}\n\n\t// Handle dynamic changes of color space\n\tset spaceId (id) {\n\t\tlet newSpace = Color.space(id);\n\n\t\tid = newSpace.id;\n\n\t\tif (this.space && newSpace && this.space !== newSpace) {\n\t\t\t// We’re not setting this for the first time, need to:\n\t\t\t// a) Convert coords\n\t\t\tthis.coords = this[id];\n\n\t\t\t// b) Remove instance properties from previous color space\n\t\t\tfor (let prop in this.space.instance) {\n\t\t\t\tif (this.hasOwnProperty(prop)) {\n\t\t\t\t\tdelete this[prop];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis._spaceId = id;\n\n\t\t// Add new instance properties from new color space\n\t\tutil.extend(this, this.space.instance);\n\t}\n\n\tget white () {\n\t\treturn this.space.white || Color.whites.D50;\n\t}\n\n\t// Set properties and return current instance\n\tset (prop, value) {\n\t\tif (arguments.length === 1 && util.type(arguments[0]) === \"object\") {\n\t\t\t// Argument is an object literal\n\t\t\tlet object = arguments[0];\n\t\t\tfor (let p in object) {\n\t\t\t\tthis.set(p, object[p]);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif (typeof value === \"function\") {\n\t\t\t\tlet current = util.value(this, prop);\n\n\t\t\t\tutil.value(this, prop, value.call(this, current));\n\t\t\t}\n\t\t\telse {\n\t\t\t\tutil.value(this, prop, value);\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\t}\n\n\tlighten (amount = .25) {\n\t\tlet ret = new Color(this);\n\t\tlet lightness = ret.lightness;\n\t\tret.lightness = lightness * (1 + amount);\n\n\t\treturn ret;\n\t}\n\n\tdarken (amount = .25) {\n\t\tlet ret = new Color(this);\n\t\tlet lightness = ret.lightness;\n\t\tret.lightness = lightness * (1 - amount);\n\n\t\treturn ret;\n\t}\n\n\t// Euclidean distance of colors in an arbitrary color space\n\tdistance (color, space = \"lab\") {\n\t\tcolor = Color.get(color);\n\t\tspace = Color.space(space);\n\n\t\tlet coords1 = this[space.id];\n\t\tlet coords2 = color[space.id];\n\n\t\treturn Math.sqrt(coords1.reduce((a, c, i) => {\n\t\t\tif (isNaN(c) || isNaN(coords2[i])) {\n\t\t\t\treturn a;\n\t\t\t}\n\n\t\t\treturn a + (coords2[i] - c) ** 2;\n\t\t}, 0));\n\t}\n\n\tdeltaE (color, o = {}) {\n\t\tif (util.isString(o)) {\n\t\t\to = {method: o};\n\t\t}\n\n\t\tlet {method = Color.defaults.deltaE, ...rest} = o;\n\t\tcolor = Color.get(color);\n\n\t\tif (this[\"deltaE\" + method]) {\n\t\t\treturn this[\"deltaE\" + method](color, rest);\n\t\t}\n\n\t\treturn this.deltaE76(color);\n\t}\n\n\t// 1976 DeltaE. 2.3 is the JND\n\tdeltaE76 (color) {\n\t\treturn this.distance(color, \"lab\");\n\t}\n\n\t// Relative luminance\n\tget luminance () {\n\t\treturn this.xyz.Y;\n\t}\n\n\tset luminance (value) {\n\t\tthis.xyz.Y = value;\n\t}\n\n\t// WCAG 2.0 contrast https://www.w3.org/TR/WCAG20-TECHS/G18.html\n\tcontrast (color) {\n\t\tcolor = Color.get(color);\n\t\tlet L1 = this.luminance;\n\t\tlet L2 = color.luminance;\n\n\t\tif (L2 > L1) {\n\t\t\t[L1, L2] = [L2, L1];\n\t\t}\n\n\t\treturn (L1 + .05) / (L2 + .05);\n\t}\n\n\t// Chromaticity coordinates\n\tget uv () {\n\t\tlet [X, Y, Z] = this.xyz;\n\t\tlet denom = X + 15 * Y + 3 * Z;\n\t\treturn [4 * X / denom, 9 * Y / denom];\n\t}\n\n\tget xy () {\n\t\tlet [X, Y, Z] = this.xyz;\n\t\tlet  sum = X + Y + Z;\n\t\treturn [X / sum, Y / sum];\n\t}\n\t// no setters, as lightness information is lost\n\t// when converting color to chromaticity\n\n\t// Get formatted coords\n\tgetCoords ({inGamut, precision = Color.defaults.precision} = {}) {\n\t\tlet coords = this.coords;\n\n\t\tif (inGamut && !this.inGamut()) {\n\t\t\tcoords = this.toGamut(inGamut === true? undefined : inGamut).coords;\n\t\t}\n\n\t\tif (precision !== undefined && precision !== null) {\n\t\t\tlet bounds = this.space.coords? Object.values(this.space.coords) : [];\n\n\t\t\tcoords = coords.map((n, i) => util.toPrecision(n, precision, bounds[i]));\n\t\t}\n\n\t\treturn coords;\n\t}\n\n\t/**\n\t * @return {Boolean} Is the color in gamut?\n\t */\n\tinGamut (space = this.space, options) {\n\t\tspace = Color.space(space);\n\t\treturn Color.inGamut(space, this[space.id], options);\n\t}\n\n\tstatic inGamut (space, coords, {epsilon = ε} = {}) {\n\t\tspace = Color.space(space);\n\n\t\tif (space.inGamut) {\n\t\t\treturn space.inGamut(coords, epsilon);\n\t\t}\n\t\telse {\n\t\t\tif (!space.coords) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\t// No color-space specific inGamut() function, just check if coords are within reference range\n\t\t\tlet bounds = Object.values(space.coords);\n\n\t\t\treturn coords.every((c, i) => {\n\t\t\t\tif (Number.isNaN(c)) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\tlet [min, max] = bounds[i];\n\n\t\t\t\treturn (min === undefined || c >= min - epsilon)\n\t\t\t\t    && (max === undefined || c <= max + epsilon);\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * Force coordinates in gamut of a certain color space and return the result\n\t * @param {Object} options\n\t * @param {string} options.method - How to force into gamut.\n\t *        If \"clip\", coordinates are just clipped to their reference range.\n\t *        If in the form [colorSpaceId].[coordName], that coordinate is reduced\n\t *        until the color is in gamut. Please note that this may produce nonsensical\n\t *        results for certain coordinates (e.g. hue) or infinite loops if reducing the coordinate never brings the color in gamut.\n\t * @param {ColorSpace|string} options.space - The space whose gamut we want to map to\n\t * @param {boolean} options.inPlace - If true, modify the current color, otherwise return a new one.\n\t */\n\ttoGamut ({method = Color.defaults.gamutMapping, space = this.space, inPlace} = {}) {\n\t\tif (util.isString(arguments[0])) {\n\t\t\tspace = arguments[0];\n\t\t}\n\n\t\tspace = Color.space(space);\n\n\t\tif (this.inGamut(space, {epsilon: 0})) {\n\t\t\treturn this;\n\t\t}\n\n\t\t// 3 spaces:\n\t\t// this.space: current color space\n\t\t// space: space whose gamut we are mapping to\n\t\t// mapSpace: space with the coord we're reducing\n\t\tlet color = this.to(space);\n\n\t\tif (method.indexOf(\".\") > 0 && !this.inGamut(space)) {\n\t\t\tlet clipped = color.toGamut({method: \"clip\", space});\n\t\t\tif (this.deltaE(clipped, {method: \"2000\"}) > 2) {\n\t\t\t\t// Reduce a coordinate of a certain color space until the color is in gamut\n\t\t\t\tlet [mapSpace, coordName] = util.parseCoord(method);\n\n\t\t\t\tlet mappedColor = color.to(mapSpace);\n\t\t\t\tlet bounds = mapSpace.coords[coordName];\n\t\t\t\tlet min = bounds[0];\n\t\t\t\tlet ε = .01; // for deltaE\n\t\t\t\tlet low = min;\n\t\t\t\tlet high = mappedColor[coordName];\n\t\t\t\twhile (high - low > ε) {\n\t\t\t\t\tlet clipped = mappedColor.toGamut({space, method: \"clip\"});\n\t\t\t\t\tlet deltaE = mappedColor.deltaE(clipped, {method: \"2000\"});\n\t\t\t\t\tif (deltaE - 2 < ε) {\n\t\t\t\t\t\tlow = mappedColor[coordName];\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\thigh = mappedColor[coordName];\n\t\t\t\t\t}\n\n\t\t\t\t\tmappedColor[coordName] = (high + low) / 2;\n\t\t\t\t}\n\n\t\t\t\tcolor = mappedColor.to(space);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tcolor = clipped;\n\t\t\t}\n\n\t\t}\n\n\t\tif (method === \"clip\" // Dumb coord clipping\n\t\t    // finish off smarter gamut mapping with clip to get rid of ε, see #17\n\t\t    || !color.inGamut(space, {epsilon: 0})\n\t\t) {\n\t\t\tlet bounds = Object.values(space.coords);\n\n\t\t\tcolor.coords = color.coords.map((c, i) => {\n\t\t\t\tlet [min, max] = bounds[i];\n\n\t\t\t\tif (min !== undefined) {\n\t\t\t\t\tc = Math.max(min, c);\n\t\t\t\t}\n\n\t\t\t\tif (max !== undefined) {\n\t\t\t\t\tc = Math.min(c, max);\n\t\t\t\t}\n\n\t\t\t\treturn c;\n\t\t\t});\n\t\t}\n\n\t\tif (space.id !== this.spaceId) {\n\t\t\tcolor = color.to(this.space);\n\t\t}\n\n\t\tif (inPlace) {\n\t\t\tthis.coords = color.coords;\n\t\t\treturn this;\n\t\t}\n\t\telse {\n\t\t\treturn color;\n\t\t}\n\t}\n\n\tclone () {\n\t\treturn new Color(this.spaceId, this.coords, this.alpha);\n\t}\n\n\t/**\n\t * Convert to color space and return a new color\n\t * @param {Object|string} space - Color space object or id\n\t * @param {Object} options\n\t * @param {boolean} options.inGamut - Whether to force resulting color in gamut\n\t * @returns {Color}\n\t */\n\tto (space, {inGamut} = {}) {\n\t\tspace = Color.space(space);\n\t\tlet id = space.id;\n\n\t\tlet color = new Color(id, this[id], this.alpha);\n\n\t\tif (inGamut) {\n\t\t\tcolor.toGamut({inPlace: true});\n\t\t}\n\n\t\treturn color;\n\t}\n\n\ttoJSON () {\n\t\treturn {\n\t\t\tspaceId: this.spaceId,\n\t\t\tcoords: this.coords,\n\t\t\talpha: this.alpha\n\t\t};\n\t}\n\n\t/**\n\t * Generic toString() method, outputs a color(spaceId ...coords) function\n\t * @param {Object} options\n\t * @param {number} options.precision - Significant digits\n\t * @param {boolean} options.commas - Whether to use commas to separate arguments or spaces (and a slash for alpha) [default: false]\n\t * @param {Function|String|Array} options.format - If function, maps all coordinates. Keywords tap to colorspace-specific formats (e.g. \"hex\")\n\t * @param {boolean} options.inGamut - Adjust coordinates to fit in gamut first? [default: false]\n\t * @param {string} options.name - Function name [default: color]\n\t */\n\ttoString ({\n\t\tprecision = Color.defaults.precision,\n\t\tformat, commas, inGamut,\n\t\tname = \"color\",\n\t\tfallback\n\t} = {}) {\n\t\tlet strAlpha = this.alpha < 1? ` ${commas? \",\" : \"/\"} ${this.alpha}` : \"\";\n\n\t\tlet coords = this.getCoords({inGamut, precision});\n\n\t\t// Convert NaN to zeros to have a chance at a valid CSS color\n\t\t// Also convert -0 to 0\n\t\tcoords = coords.map(c => c? c : 0);\n\n\t\tif (util.isString(format)) {\n\t\t\tif (format === \"%\") {\n\t\t\t\tformat = c => {\n\t\t\t\t\tc *= 100;\n\t\t\t\t\treturn util.toPrecision(c, precision) + \"%\";\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\tif (typeof format === \"function\") {\n\t\t\tcoords = coords.map(format);\n\t\t}\n\n\t\tlet args = [...coords];\n\n\t\tif (name === \"color\") {\n\t\t\t// If output is a color() function, add colorspace id as first argument\n\t\t\targs.unshift(this.space? this.space.cssId || this.space.id : \"XYZ\");\n\t\t}\n\n\t\tlet ret = `${name}(${args.join(commas? \", \" : \" \")}${strAlpha})`;\n\n\t\tif (fallback) {\n\t\t\t// Return a CSS string that's actually supported by the current browser\n\t\t\t// Return as a String object, so we can also hang the color object on it\n\t\t\t// in case it's different than this. That way third party code can use that\n\t\t\t// for e.g. computing text color, indicating out of gamut etc\n\n\t\t\tif (!hasDOM || typeof CSS === \"undefined\" || CSS.supports(\"color\", ret)) {\n\t\t\t\tret = new String(ret);\n\t\t\t\tret.color = this;\n\t\t\t\treturn ret;\n\t\t\t}\n\n\t\t\tlet fallbacks = Array.isArray(fallback)? fallback.slice() : Color.defaults.fallbackSpaces;\n\n\t\t\tfor (let i = 0, fallbackSpace; fallbackSpace = fallbacks[i]; i++) {\n\t\t\t\tif (Color.spaces[fallbackSpace]) {\n\t\t\t\t\tlet color = this.to(fallbackSpace);\n\t\t\t\t\tret = color.toString({precision});\n\n\t\t\t\t\tif (CSS.supports(\"color\", ret)) {\n\t\t\t\t\t\tret = new String(ret);\n\t\t\t\t\t\tret.color = color;\n\t\t\t\t\t\treturn ret;\n\t\t\t\t\t}\n\t\t\t\t\telse if (fallbacks === Color.defaults.fallbackSpaces) {\n\t\t\t\t\t\t// Drop this space from the default fallbacks since it's not supported\n\t\t\t\t\t\tfallbacks.splice(i, 1);\n\t\t\t\t\t\ti--;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// None of the fallbacks worked, return in the most conservative form possible\n\t\t\tlet color = this.to(\"srgb\");\n\t\t\tret = new String(color.toString({commas: true}));\n\t\t\tret.color = color;\n\t\t}\n\n\t\treturn ret;\n\t}\n\n\tequals (color) {\n\t\tcolor = Color.get(color);\n\t\treturn this.spaceId === color.spaceId\n\t\t       && this.alpha === color.alpha\n\t\t       && this.coords.every((c, i) => c === color.coords[i]);\n\t}\n\n\t// Adapt XYZ from white point W1 to W2\n\tstatic chromaticAdaptation (W1, W2, XYZ, options = {}) {\n\t\tW1 = W1 || Color.whites.D50;\n\t\tW2 = W2 || Color.whites.D50;\n\n\t\tif (W1 === W2) {\n\t\t\treturn XYZ;\n\t\t}\n\n\t\tlet env = {W1, W2, XYZ, options};\n\n\t\tColor.hooks.run(\"chromatic-adaptation-start\", env);\n\n\t\tif (!env.M) {\n\t\t\tif (env.W1 === Color.whites.D65 && env.W2 === Color.whites.D50) {\n\t\t\t\t// Linear Bradford CAT\n\t\t\t\t// env.M = [\n\t\t\t\t// \t[ 1.0478112,  0.0228866, -0.0501270],\n\t\t\t\t// \t[ 0.0295424,  0.9904844, -0.0170491],\n\t\t\t\t// \t[-0.0092345,  0.0150436,  0.7521316]\n\t\t\t\t// ];\n\n\t\t\t\tenv.M = [\n\t\t\t\t\t[  1.0479298208405488,    0.022946793341019088,  -0.05019222954313557 ],\n\t\t\t\t\t[  0.029627815688159344,  0.990434484573249,     -0.01707382502938514 ],\n\t\t\t\t\t[ -0.009243058152591178,  0.015055144896577895,   0.7518742899580008  ]\n\t\t\t\t];\n\t\t\t}\n\t\t\telse if (env.W1 === Color.whites.D50 && env.W2 === Color.whites.D65) {\n\t\t\t\t// env.M = [\n\t\t\t\t// \t[ 0.9555766, -0.0230393,  0.0631636],\n\t\t\t\t// \t[-0.0282895,  1.0099416,  0.0210077],\n\t\t\t\t// \t[ 0.0122982, -0.0204830,  1.3299098]\n\t\t\t\t// ];\n\n\t\t\t\tenv.M = [\n\t\t\t\t\t[  0.9554734527042182,   -0.023098536874261423,  0.0632593086610217   ],\n\t\t\t\t\t[ -0.028369706963208136,  1.0099954580058226,    0.021041398966943008 ],\n\t\t\t\t\t[  0.012314001688319899, -0.020507696433477912,  1.3303659366080753   ]\n\t\t\t\t];\n\t\t\t}\n\t\t}\n\n\t\tColor.hooks.run(\"chromatic-adaptation-end\", env);\n\n\t\tif (env.M) {\n\t\t\treturn util.multiplyMatrices(env.M, env.XYZ);\n\t\t}\n\t\telse {\n\t\t\tthrow new TypeError(\"Only Bradford CAT with white points D50 and D65 supported for now.\");\n\t\t}\n\t}\n\n\t// CSS color to Color object\n\tstatic parse (str) {\n\t\tlet env = {str};\n\t\tColor.hooks.run(\"parse-start\", env);\n\n\t\tif (env.color) {\n\t\t\treturn env.color;\n\t\t}\n\n\t\tenv.parsed = Color.parseFunction(env.str);\n\t\tColor.hooks.run(\"parse-function-start\", env);\n\n\t\tif (env.color) {\n\t\t\treturn env.color;\n\t\t}\n\n\t\t// Try colorspace-specific parsing\n\t\tfor (let space of Object.values(Color.spaces)) {\n\t\t\tif (space.parse) {\n\t\t\t\tlet color = space.parse(env.str, env.parsed);\n\n\t\t\t\tif (color) {\n\t\t\t\t\treturn color;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet name = env.parsed && env.parsed.name;\n\n\t\tif (!/^color|^rgb/.test(name) && hasDOM && document.head) {\n\t\t\t// Use browser to parse when a DOM is available\n\t\t\t// we mainly use this for color names right now if keywords.js is not included\n\t\t\t// and for future-proofing\n\n\t\t\tlet previousColor = document.head.style.color;\n\t\t\tdocument.head.style.color = \"\";\n\t\t\tdocument.head.style.color = str;\n\n\t\t\tif (document.head.style.color !== previousColor) {\n\t\t\t\tlet computed = getComputedStyle(document.head).color;\n\t\t\t\tdocument.head.style.color = previousColor;\n\n\t\t\t\tif (computed) {\n\t\t\t\t\tstr = computed;\n\t\t\t\t\tenv.parsed = Color.parseFunction(computed);\n\t\t\t\t\tname = env.parsed.name;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (env.parsed) {\n\t\t\t// It's a function\n\t\t\tif (name === \"rgb\" || name === \"rgba\") {\n\t\t\t\tlet args = env.parsed.args.map((c, i) => i < 3 && !c.percentage? c / 255 : +c);\n\n\t\t\t\treturn {\n\t\t\t\t\tspaceId: \"srgb\",\n\t\t\t\t\tcoords: args.slice(0, 3),\n\t\t\t\t\talpha: args[3]\n\t\t\t\t};\n\t\t\t}\n\t\t\telse if (name === \"color\") {\n\t\t\t\tlet spaceId = env.parsed.args.shift().toLowerCase();\n\t\t\t\tlet space = Object.values(Color.spaces).find(space => (space.cssId || space.id) === spaceId);\n\n\t\t\t\tif (space) {\n\t\t\t\t\t// From https://drafts.csswg.org/css-color-4/#color-function\n\t\t\t\t\t// If more <number>s or <percentage>s are provided than parameters that the colorspace takes, the excess <number>s at the end are ignored.\n\t\t\t\t\t// If less <number>s or <percentage>s are provided than parameters that the colorspace takes, the missing parameters default to 0. (This is particularly convenient for multichannel printers where the additional inks are spot colors or varnishes that most colors on the page won’t use.)\n\t\t\t\t\tlet argCount = Object.keys(space.coords).length;\n\t\t\t\t\tlet alpha = env.parsed.rawArgs.indexOf(\"/\") > 0? env.parsed.args.pop() : 1;\n\t\t\t\t\tlet coords = Array(argCount).fill(0);\n\t\t\t\t\tcoords.forEach((_, i) => coords[i] = env.parsed.args[i] || 0);\n\n\t\t\t\t\treturn {spaceId: space.id, coords, alpha};\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthrow new TypeError(`Color space ${spaceId} not found. Missing a plugin?`);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthrow new TypeError(`Could not parse ${str} as a color. Missing a plugin?`);\n\t}\n\n\t/**\n\t * Parse a CSS function, regardless of its name and arguments\n\t * @param String str String to parse\n\t * @return Object An object with {name, args, rawArgs}\n\t */\n\tstatic parseFunction (str) {\n\t\tif (!str) {\n\t\t\treturn;\n\t\t}\n\n\t\tstr = str.trim();\n\n\t\tconst isFunctionRegex = /^([a-z]+)\\((.+?)\\)$/i;\n\t\tconst isNumberRegex = /^-?[\\d.]+$/;\n\t\tlet parts = str.match(isFunctionRegex);\n\n\t\tif (parts) {\n\t\t\t// It is a function, parse args\n\t\t\tlet args = parts[2].match(/([-\\w.]+(?:%|deg)?)/g);\n\n\t\t\targs = args.map(arg => {\n\t\t\t\tif (/%$/.test(arg)) {\n\t\t\t\t\t// Convert percentages to 0-1 numbers\n\t\t\t\t\tlet n = new Number(+arg.slice(0, -1) / 100);\n\t\t\t\t\tn.percentage = true;\n\t\t\t\t\treturn n;\n\t\t\t\t}\n\t\t\t\telse if (/deg$/.test(arg)) {\n\t\t\t\t\t// Drop deg from degrees and convert to number\n\t\t\t\t\tlet n = new Number(+arg.slice(0, -3));\n\t\t\t\t\tn.deg = true;\n\t\t\t\t\treturn n;\n\t\t\t\t}\n\t\t\t\telse if (isNumberRegex.test(arg)) {\n\t\t\t\t\t// Convert numerical args to numbers\n\t\t\t\t\treturn +arg;\n\t\t\t\t}\n\n\t\t\t\t// Return everything else as-is\n\t\t\t\treturn arg;\n\t\t\t});\n\n\t\t\treturn {\n\t\t\t\tname: parts[1].toLowerCase(),\n\t\t\t\trawName: parts[1],\n\t\t\t\trawArgs: parts[2],\n\t\t\t\t// An argument could be (as of css-color-4):\n\t\t\t\t// a number, percentage, degrees (hue), ident (in color())\n\t\t\t\targs\n\t\t\t};\n\t\t}\n\t}\n\n\t// One-off convert between color spaces\n\tstatic convert (coords, fromSpace, toSpace) {\n\t\tfromSpace = Color.space(fromSpace);\n\t\ttoSpace = Color.space(toSpace);\n\n\t\tif (fromSpace === toSpace) {\n\t\t\t// Same space, no change needed\n\t\t\treturn coords;\n\t\t}\n\n\t\t// Convert NaN to 0, which seems to be valid in every coordinate of every color space\n\t\tcoords = coords.map(c => Number.isNaN(c)? 0 : c);\n\n\t\tlet fromId = fromSpace.id;\n\t\tlet toId = toSpace.id;\n\n\t\t// Do we have a more specific conversion function?\n\t\t// Avoids round-tripping to & from XYZ\n\t\tif (toSpace.from && toSpace.from[fromId]) {\n\t\t\t// No white point adaptation, we assume the custom function takes care of it\n\t\t\treturn toSpace.from[fromId](coords);\n\t\t}\n\n\t\tif (fromSpace.to && fromSpace.to[toId]) {\n\t\t\t// No white point adaptation, we assume the custom function takes care of it\n\t\t\treturn fromSpace.to[toId](coords);\n\t\t}\n\n\t\tlet XYZ = fromSpace.toXYZ(coords);\n\n\t\tif (toSpace.white !== fromSpace.white) {\n\t\t\t// Different white point, perform white point adaptation\n\t\t\tXYZ = Color.chromaticAdaptation(fromSpace.white, toSpace.white, XYZ);\n\t\t}\n\n\t\treturn toSpace.fromXYZ(XYZ);\n\t}\n\n\t/**\n\t * Get a color from the argument passed\n\t * Basically gets us the same result as new Color(color) but doesn't clone an existing color object\n\t */\n\tstatic get (color, ...args) {\n\t\tif (color instanceof Color) {\n\t\t\treturn color;\n\t\t}\n\n\t\treturn new Color(color, ...args);\n\t}\n\n\t/**\n\t * Return a color space object from an id or color space object\n\t * Mainly used internally, so that functions can easily accept either\n\t */\n\tstatic space (space) {\n\t\tlet type = util.type(space);\n\n\t\tif (type === \"string\") {\n\t\t\t// It's a color space id\n\t\t\tlet ret = Color.spaces[space.toLowerCase()];\n\n\t\t\tif (!ret) {\n\t\t\t\tthrow new TypeError(`No color space found with id = \"${space}\"`);\n\t\t\t}\n\n\t\t\treturn ret;\n\t\t}\n\t\telse if (space && type === \"object\") {\n\t\t\treturn space;\n\t\t}\n\n\t\tthrow new TypeError(`${space} is not a valid color space`);\n\t}\n\n\t// Define a new color space\n\tstatic defineSpace ({id, inherits}) {\n\t\tlet space = Color.spaces[id] = arguments[0];\n\n\t\tif (inherits) {\n\t\t\tconst except = [\"id\", \"parse\", \"instance\", \"properties\"];\n\t\t\tlet parent = Color.spaces[inherits];\n\n\t\t\tfor (let prop in parent) {\n\t\t\t\tif (!except.includes(prop) && !(prop in space)) {\n\t\t\t\t\tutil.copyDescriptor(space, parent, prop);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet coords = space.coords;\n\n\t\tif (space.properties) {\n\t\t\tutil.extend(Color.prototype, space.properties);\n\t\t}\n\n\t\tif (!space.fromXYZ && !space.toXYZ) {\n\t\t\t// Using a different connection space, define from/to XYZ functions based on that\n\t\t\tlet connectionSpace;\n\n\t\t\t// What are we using as a connection space?\n\t\t\tif (space.from && space.to) {\n\t\t\t\tlet from = new Set(Object.keys(space.from));\n\t\t\t\tlet to = new Set(Object.keys(space.to));\n\n\t\t\t\t// Find spaces we can both convert to and from\n\t\t\t\tlet candidates = [...from].filter(id => {\n\t\t\t\t\tif (to.has(id)) {\n\t\t\t\t\t\t// Of those, only keep those that have fromXYZ and toXYZ\n\t\t\t\t\t\tlet space = Color.spaces[id];\n\t\t\t\t\t\treturn space && space.fromXYZ && space.toXYZ;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tif (candidates.length > 0) {\n\t\t\t\t\t// Great, we found connection spaces! Pick the first one\n\t\t\t\t\tconnectionSpace = Color.spaces[candidates[0]];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (connectionSpace) {\n\t\t\t\t// Define from/to XYZ functions based on the connection space\n\t\t\t\tObject.assign(space, {\n\t\t\t\t\t// ISSUE do we need white point adaptation here?\n\t\t\t\t\tfromXYZ(XYZ) {\n\t\t\t\t\t\tlet newCoords = connectionSpace.fromXYZ(XYZ);\n\t\t\t\t\t\treturn this.from[connectionSpace.id](newCoords);\n\t\t\t\t\t},\n\t\t\t\t\ttoXYZ(coords) {\n\t\t\t\t\t\tlet newCoords = this.to[connectionSpace.id](coords);\n\t\t\t\t\t\treturn connectionSpace.toXYZ(newCoords);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthrow new ReferenceError(`No connection space found for ${space.name}.`);\n\t\t\t}\n\t\t}\n\n\t\tlet coordNames = Object.keys(coords);\n\n\t\t// Define getters and setters for color[spaceId]\n\t\t// e.g. color.lch on *any* color gives us the lch coords\n\t\tObject.defineProperty(Color.prototype, id, {\n\t\t\t// Convert coords to coords in another colorspace and return them\n\t\t\t// Source colorspace: this.spaceId\n\t\t\t// Target colorspace: id\n\t\t\tget () {\n\t\t\t\tlet ret = Color.convert(this.coords, this.spaceId, id);\n\n\t\t\t\tif (typeof Proxy === \"undefined\") {\n\t\t\t\t\t// If proxies are not supported, just return a static array\n\t\t\t\t\treturn ret;\n\t\t\t\t}\n\n\t\t\t\t// Enable color.spaceId.coordName syntax\n\t\t\t\treturn new Proxy(ret, {\n\t\t\t\t\thas: (obj, property) => {\n\t\t\t\t\t\treturn coordNames.includes(property) || Reflect.has(obj, property);\n\t\t\t\t\t},\n\t\t\t\t\tget: (obj, property, receiver) => {\n\t\t\t\t\t\tlet i = coordNames.indexOf(property);\n\n\t\t\t\t\t\tif (i > -1) {\n\t\t\t\t\t\t\treturn obj[i];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn Reflect.get(obj, property, receiver);\n\t\t\t\t\t},\n\t\t\t\t\tset: (obj, property, value, receiver) => {\n\t\t\t\t\t\tlet i = coordNames.indexOf(property);\n\n\t\t\t\t\t\tif (property > -1) { // Is property a numerical index?\n\t\t\t\t\t\t\ti = property; // next if will take care of modifying the color\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (i > -1) {\n\t\t\t\t\t\t\tobj[i] = value;\n\n\t\t\t\t\t\t\t// Update color.coords\n\t\t\t\t\t\t\tthis.coords = Color.convert(obj, id, this.spaceId);\n\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn Reflect.set(obj, property, value, receiver);\n\t\t\t\t\t},\n\n\t\t\t\t});\n\t\t\t},\n\t\t\t// Convert coords in another colorspace to internal coords and set them\n\t\t\t// Target colorspace: this.spaceId\n\t\t\t// Source colorspace: id\n\t\t\tset (coords) {\n\t\t\t\tthis.coords = Color.convert(coords, id, this.spaceId);\n\t\t\t},\n\t\t\tconfigurable: true,\n\t\t\tenumerable: true\n\t\t});\n\n\t\treturn space;\n\t}\n\n\t// Define a shortcut property, e.g. color.lightness instead of color.lch.lightness\n\t// Shorcut is looked up on Color.shortcuts at calling time\n\t// If `long` is provided, it's added to Color.shortcuts as well, otherwise it's assumed to be already there\n\tstatic defineShortcut(prop, obj = Color.prototype, long) {\n\t\tif (long) {\n\t\t\tColor.shortcuts[prop] = long;\n\t\t}\n\n\t\tObject.defineProperty(obj, prop, {\n\t\t\tget () {\n\t\t\t\treturn util.value(this, Color.shortcuts[prop]);\n\t\t\t},\n\t\t\tset (value) {\n\t\t\t\treturn util.value(this, Color.shortcuts[prop], value);\n\t\t\t},\n\t\t\tconfigurable: true,\n\t\t\tenumerable: true\n\t\t});\n\t}\n\n\t// Define static versions of all instance methods\n\tstatic statify(names = []) {\n\t\tnames = names || Object.getOwnPropertyNames(Color.prototype);\n\n\t\tfor (let prop of Object.getOwnPropertyNames(Color.prototype)) {\n\t\t\tlet descriptor = Object.getOwnPropertyDescriptor(Color.prototype, prop);\n\n\t\t\tif (descriptor.get || descriptor.set) {\n\t\t\t\tcontinue; // avoid accessors\n\t\t\t}\n\n\t\t\tlet method = descriptor.value;\n\n\t\t\tif (typeof method === \"function\" && !(prop in Color)) {\n\t\t\t\t// We have a function, and no static version already\n\t\t\t\tColor[prop] = function(color, ...args) {\n\t\t\t\t\tcolor = Color.get(color);\n\t\t\t\t\treturn color[prop](...args);\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t}\n};\n\nObject.assign(Color, {\n\tutil,\n\thooks: new Hooks(),\n\twhites: {\n\t\t// from ASTM E308-01\n\t\t// D50: [0.96422, 1.00000, 0.82521],\n\t\t// D65: [0.95047, 1.00000, 1.08883],\n\t\t// for compatibility, the four-digit chromaticity-derived ones everyone else uses\n\t\tD50: [0.3457 / 0.3585, 1.00000, (1.0 - 0.3457 - 0.3585) / 0.3585],\n\t\tD65: [0.3127 / 0.3290, 1.00000, (1.0 - 0.3127 - 0.3290) / 0.3290],\n\n\t},\n\tspaces: {},\n\n\t// These will be available as getters and setters on EVERY color instance.\n\t// They refer to LCH by default, but can be set to anything\n\t// and you can add more by calling Color.defineShortcut()\n\tshortcuts: {\n\t\t\"lightness\": \"lch.lightness\",\n\t\t\"chroma\": \"lch.chroma\",\n\t\t\"hue\": \"lch.hue\",\n\t},\n\n\t// Global defaults one may want to configure\n\tdefaults: {\n\t\tgamutMapping: \"lch.chroma\",\n\t\tprecision: 5,\n\t\tdeltaE: \"76\", // Default deltaE method\n\t\tfallbackSpaces: [\"p3\", \"srgb\"]\n\t}\n});\n\nColor.defineSpace({\n\tid: \"xyz\",\n\tname: \"XYZ\",\n\tcoords: {\n\t\tX: [],\n\t\tY: [],\n\t\tZ: []\n\t},\n\twhite: Color.whites.D65,\n\tinGamut: coords => true,\n\ttoXYZ: coords => coords,\n\tfromXYZ: coords => coords\n});\n\nColor.defineSpace({\n\tid: \"xyz-d50\",\n\tname: \"XYZ-D50\",\n\tcoords: {\n\t\tX: [],\n\t\tY: [],\n\t\tZ: []\n\t},\n\twhite: Color.whites.D50,\n\tinGamut: coords => true,\n\ttoXYZ: coords => coords,\n\tfromXYZ: coords => coords\n});\n\nColor.defineSpace({\n\tid: \"xyz-d65\",\n\tname: \"XYZ-D65\",\n\tcoords: {\n\t\tX: [],\n\t\tY: [],\n\t\tZ: []\n\t},\n\twhite: Color.whites.D65,\n\tinGamut: coords => true,\n\ttoXYZ: coords => coords,\n\tfromXYZ: coords => coords\n});\n\nfor (let prop in Color.shortcuts) {\n\tColor.defineShortcut(prop);\n}\n\n// Make static methods for all instance methods\nColor.statify();\n\nexport {util};\n\n// Color.DEBUGGING = true;\n","import Color from \"./../color.js\";\n\nColor.defineSpace({\n\tid: \"lab\",\n\tname: \"Lab\",\n\tcoords: {\n\t\tL: [0, 100],\n\t\ta: [-100, 100],\n\t\tb: [-100, 100]\n\t},\n\tinGamut: coords => true,\n\t// Assuming XYZ is relative to D50, convert to CIE Lab\n\t// from CIE standard, which now defines these as a rational fraction\n\twhite: Color.whites.D50,\n\tε: 216/24389,  // 6^3/29^3 == (24/116)^3\n\tε3: 24/116,\n\tκ: 24389/27,   // 29^3/3^3\n\t// κ * ε  = 2^3 = 8\n\tfromXYZ(XYZ) {\n\t\t// Convert D50-adapted XYX to Lab\n\t\t//  CIE 15.3:2004 section 8.2.1.1\n\t\tconst {κ, ε, white} = this;\n\n\t\t// compute xyz, which is XYZ scaled relative to reference white\n\t\tlet xyz = XYZ.map((value, i) => value / white[i]);\n\n\t\t// now compute f\n\t\tlet f = xyz.map(value => value > ε ? Math.cbrt(value) : (κ * value + 16)/116);\n\n\t\treturn [\n\t\t\t(116 * f[1]) - 16, \t // L\n\t\t\t500 * (f[0] - f[1]), // a\n\t\t\t200 * (f[1] - f[2])  // b\n\t\t];\n\t},\n\ttoXYZ(Lab) {\n\t\t// Convert Lab to D50-adapted XYZ\n\t\t// Same result as CIE 15.3:2004 Appendix D although the derivation is different\n\t\t// http://www.brucelindbloom.com/index.html?Eqn_RGB_XYZ_Matrix.html\n\t\tconst {κ, ε3, white} = this;\n\n\t\t// compute f, starting with the luminance-related term\n\t\tlet f = [];\n\t\tf[1] = (Lab[0] + 16)/116;\n\t\tf[0] = Lab[1]/500 + f[1];\n\t\tf[2] = f[1] - Lab[2]/200;\n\n\t\t// compute xyz\n\t\tvar xyz = [\n\t\t\tf[0]   > ε3  ?  Math.pow(f[0], 3)            : (116*f[0]-16)/κ,\n\t\t\tLab[0] > 8   ?  Math.pow((Lab[0]+16)/116, 3) : Lab[0]/κ,\n\t\t\tf[2]   > ε3  ?  Math.pow(f[2], 3)            : (116*f[2]-16)/κ\n\t\t];\n\n\t\t// Compute XYZ by scaling xyz by reference white\n\t\treturn xyz.map((value, i) => value * white[i]);\n\t},\n\tparse (str, parsed = Color.parseFunction(str)) {\n\t\tif (parsed && parsed.name === \"lab\") {\n\t\t\tlet L = parsed.args[0];\n\n\t\t\t// Percentages in lab() don't translate to a 0-1 range, but a 0-100 range\n\t\t\tif (L.percentage) {\n\t\t\t\tparsed.args[0] = L * 100;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tspaceId: \"lab\",\n\t\t\t\tcoords: parsed.args.slice(0, 3),\n\t\t\t\talpha: parsed.args.slice(3)[0]\n\t\t\t};\n\t\t}\n\t},\n\tinstance: {\n\t\ttoString ({format, ...rest} = {}) {\n\t\t\tif (!format) {\n\t\t\t\tformat = (c, i) => i === 0? c + \"%\" : c;\n\t\t\t}\n\n\t\t\treturn Color.prototype.toString.call(this, {name: \"lab\", format, ...rest});\n\t\t}\n\t}\n});\n","export const range = [0, 360];\nrange.isAngle = true;\n\nexport function constrain (angle) {\n\treturn ((angle % 360) + 360) % 360;\n}\n\nexport function adjust (arc, angles) {\n\tif (arc === \"raw\") {\n\t\treturn angles;\n\t}\n\n\tlet [a1, a2] = angles.map(constrain);\n\n\tlet angleDiff = a2 - a1;\n\n\tif (arc === \"increasing\") {\n\t\tif (angleDiff < 0) {\n\t\t\ta2 += 360;\n\t\t}\n\t}\n\telse if (arc === \"decreasing\") {\n\t\tif (angleDiff > 0) {\n\t\t\ta1 += 360;\n\t\t}\n\t}\n\telse if (arc === \"longer\") {\n\t\tif (-180 < angleDiff && angleDiff < 180) {\n\t\t\tif (angleDiff > 0) {\n\t\t\t\ta2 += 360;\n\t\t\t}\n\t\t\telse {\n\t\t\t\ta1 += 360;\n\t\t\t}\n\t\t}\n\t}\n\telse if (arc === \"shorter\") {\n\t\tif (angleDiff > 180) {\n\t\t\ta1 += 360;\n\t\t}\n\t\telse if (angleDiff < -180) {\n\t\t\ta2 += 360;\n\t\t}\n\t}\n\n\treturn [a1, a2];\n}\n","import Color from \"./../color.js\";\nimport \"./lab.js\";\nimport * as angles from \"../angles.js\";\n\nColor.defineSpace({\n\tid: \"lch\",\n\tname: \"LCH\",\n\tcoords: {\n\t\tlightness: [0, 100],\n\t\tchroma: [0, 150],\n\t\thue: angles.range,\n\t},\n\tinGamut: coords => true,\n\twhite: Color.whites.D50,\n\tfrom: {\n\t\tlab (Lab) {\n\t\t\t// Convert to polar form\n\t\t\tlet [L, a, b] = Lab;\n\t\t\tlet hue;\n\t\t\tconst ε = 0.02;\n\n\t\t\tif (Math.abs(a) < ε && Math.abs(b) < ε) {\n\t\t\t\thue = NaN;\n\t\t\t}\n\t\t\telse {\n\t\t\t\thue = Math.atan2(b, a) * 180 / Math.PI;\n\t\t\t}\n\n\t\t\treturn [\n\t\t\t\tL, // L is still L\n\t\t\t\tMath.sqrt(a ** 2 + b ** 2), // Chroma\n\t\t\t\tangles.constrain(hue) // Hue, in degrees [0 to 360)\n\t\t\t];\n\t\t}\n\t},\n\tto: {\n\t\tlab (LCH) {\n\t\t\t// Convert from polar form\n\t\t\tlet [Lightness, Chroma, Hue] = LCH;\n\t\t\t// Clamp any negative Chroma\n\t\t\tif (Chroma < 0) {\n\t\t\t\tChroma = 0;\n\t\t\t};\n\t\t\t// Deal with NaN Hue\n\t\t\tif (isNaN(Hue)) {\n\t\t\t\tHue = 0;\n\t\t\t}\n\t\t\treturn [\n\t\t\t\tLightness, // L is still L\n\t\t\t\tChroma * Math.cos(Hue * Math.PI / 180), // a\n\t\t\t\tChroma * Math.sin(Hue * Math.PI / 180)  // b\n\t\t\t];\n\t\t}\n\t},\n\tparse (str, parsed = Color.parseFunction(str)) {\n\t\tif (parsed && parsed.name === \"lch\") {\n\t\t\tlet L = parsed.args[0];\n\n\t\t\t// Percentages in lch() don't translate to a 0-1 range, but a 0-100 range\n\t\t\tif (L.percentage) {\n\t\t\t\tparsed.args[0] = L * 100;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tspaceId: \"lch\",\n\t\t\t\tcoords: parsed.args.slice(0, 3),\n\t\t\t\talpha: parsed.args.slice(3)[0]\n\t\t\t};\n\t\t}\n\t},\n\tinstance: {\n\t\ttoString ({format, ...rest} = {}) {\n\t\t\tif (!format) {\n\t\t\t\tformat = (c, i) => i === 0? c + \"%\" : c;\n\t\t\t}\n\n\t\t\treturn Color.prototype.toString.call(this, {name: \"lch\", format, ...rest});\n\t\t}\n\t}\n});\n","import Color, {util} from \"./../color.js\";\n\nColor.defineSpace({\n\tid: \"srgb\",\n\tname: \"sRGB\",\n\tcoords: {\n\t\tred: [0, 1],\n\t\tgreen: [0, 1],\n\t\tblue: [0, 1]\n\t},\n\twhite: Color.whites.D65,\n\n\t// convert an array of sRGB values in the range 0.0 - 1.0\n\t// to linear light (un-companded) form.\n\t// https://en.wikipedia.org/wiki/SRGB\n\ttoLinear(RGB) {\n\t\treturn RGB.map(function (val) {\n\t\t\tlet sign = val < 0? -1 : 1;\n\t\t\tlet abs = Math.abs(val);\n\n\t\t\tif (abs < 0.04045) {\n\t\t\t\treturn val / 12.92;\n\t\t\t}\n\n\t\t\treturn sign * Math.pow((abs + 0.055) / 1.055, 2.4);\n\t\t});\n\t},\n\t// convert an array of linear-light sRGB values in the range 0.0-1.0\n\t// to gamma corrected form\n\t// https://en.wikipedia.org/wiki/SRGB\n\ttoGamma(RGB) {\n\t\treturn RGB.map(function (val) {\n\t\t\tlet sign = val < 0? -1 : 1;\n\t\t\tlet abs = Math.abs(val);\n\n\t\t\tif (abs > 0.0031308) {\n\t\t\t\treturn sign * (1.055 * Math.pow(abs, 1/2.4) - 0.055);\n\t\t\t}\n\n\t\t\treturn 12.92 * val;\n\t\t});\n\t},\n\n\t// This matrix was calculated directly from the RGB and white chromaticities\n\t// when rounded to 8 decimal places, it agrees completely with the official matrix\n\t// see https://github.com/w3c/csswg-drafts/issues/5922\n\ttoXYZ_M: [\n\t\t[ 0.41239079926595934, 0.357584339383878,   0.1804807884018343  ],\n\t\t[ 0.21263900587151027, 0.715168678767756,   0.07219231536073371 ],\n\t\t[ 0.01933081871559182, 0.11919477979462598, 0.9505321522496607  ]\n\t],\n\n\t// This matrix is the inverse of the above;\n\t// again it agrees with the official definiton when rounded to 8 decimal places\n\tfromXYZ_M: [\n\t\t[  3.2409699419045226,  -1.537383177570094,   -0.4986107602930034  ],\n\t\t[ -0.9692436362808796,   1.8759675015077202,   0.04155505740717559 ],\n\t\t[  0.05563007969699366, -0.20397695888897652,  1.0569715142428786  ]\n\t],\n\n\t// convert an array of sRGB values to CIE XYZ\n\t// using sRGB's own white, D65 (no chromatic adaptation)\n\ttoXYZ(rgb) {\n\t\trgb = this.toLinear(rgb);\n\n\t\treturn util.multiplyMatrices(this.toXYZ_M, rgb);\n\t},\n\tfromXYZ(XYZ) {\n\t\treturn this.toGamma(util.multiplyMatrices(this.fromXYZ_M, XYZ));\n\t},\n\t// Properties added to Color.prototype\n\tproperties: {\n\t\ttoHex({\n\t\t\talpha = true, // include alpha in hex?\n\t\t\tcollapse = true // collapse to 3-4 digit hex when possible?\n\t\t} = {}) {\n\t\t\tlet coords = this.to(\"srgb\", {inGamut: true}).coords;\n\n\t\t\tif (this.alpha < 1 && alpha) {\n\t\t\t\tcoords.push(this.alpha);\n\t\t\t}\n\n\t\t\tcoords = coords.map(c => Math.round(c * 255));\n\n\t\t\tlet collapsible = collapse && coords.every(c => c % 17 === 0);\n\n\t\t\tlet hex = coords.map(c => {\n\t\t\t\tif (collapsible) {\n\t\t\t\t\treturn (c/17).toString(16);\n\t\t\t\t}\n\n\t\t\t\treturn c.toString(16).padStart(2, \"0\");\n\t\t\t}).join(\"\");\n\n\t\t\treturn \"#\" + hex;\n\t\t},\n\n\t\tget hex() {\n\t\t\treturn this.toHex();\n\t\t}\n\t},\n\t// Properties present only on sRGB colors\n\tinstance: {\n\t\ttoString ({inGamut = true, commas, format = \"%\", ...rest} = {}) {\n\t\t\tif (format === 255) {\n\t\t\t\tformat = c => c * 255;\n\t\t\t}\n\t\t\telse if (format === \"hex\") {\n\t\t\t\treturn this.toHex(arguments[0]);\n\t\t\t}\n\n\t\t\treturn Color.prototype.toString.call(this, {\n\t\t\t\tinGamut, commas, format,\n\t\t\t\tname: \"rgb\" + (commas && this.alpha < 1? \"a\" : \"\"),\n\t\t\t\t...rest\n\t\t\t});\n\t\t}\n\t},\n\n\tparseHex (str) {\n\t\tif (str.length <= 5) {\n\t\t\t// #rgb or #rgba, duplicate digits\n\t\t\tstr = str.replace(/[a-f0-9]/gi, \"$&$&\");\n\t\t}\n\n\t\tlet rgba = [];\n\t\tstr.replace(/[a-f0-9]{2}/gi, component => {\n\t\t\trgba.push(parseInt(component, 16) / 255);\n\t\t});\n\n\t\treturn {\n\t\t\tspaceId: \"srgb\",\n\t\t\tcoords: rgba.slice(0, 3),\n\t\t\talpha: rgba.slice(3)[0]\n\t\t};\n\t}\n});\n\nColor.hooks.add(\"parse-start\", env => {\n\tlet str = env.str;\n\n\tif (/^#([a-f0-9]{3,4}){1,2}$/i.test(str)) {\n\t\tenv.color = Color.spaces.srgb.parseHex(str);\n\t}\n});\n\nexport default Color;\nexport {util};\n","import Color from \"./srgb.js\";\n\n// This is the linear-light version of sRGB\n// as used for example in SVG filters\n// or in Canvas\n\nColor.defineSpace({\n\tinherits: \"srgb\",\n\tid: \"srgb-linear\",\n\tname: \"sRGB-linear\",\n    toLinear(RGB) {\n        return RGB;\n    },\n    toGamma(RGB) {\n        return RGB;\n    },\n});\n\nexport default Color;\n\n","import Color, {util} from \"./srgb.js\";\nimport * as angles from \"../angles.js\";\n\nColor.defineSpace({\n\tid: \"hsl\",\n\tname: \"HSL\",\n\tcoords: {\n\t\thue: angles.range,\n\t\tsaturation: [0, 100],\n\t\tlightness: [0, 100]\n\t},\n\tinGamut (coords, epsilon) {\n\t\tlet rgb = this.to.srgb(coords);\n\t\treturn Color.inGamut(\"srgb\", rgb, {epsilon: epsilon});\n\t},\n\twhite: Color.whites.D65,\n\n\t// Adapted from https://en.wikipedia.org/wiki/HSL_and_HSV#From_RGB\n\tfrom: {\n\t\tsrgb (rgb) {\n\t\t\tlet max = Math.max(...rgb);\n\t\t\tlet min = Math.min(...rgb);\n\t\t\tlet [r, g, b] = rgb;\n\t\t\tlet [h, s, l] = [NaN, 0, (min + max)/2];\n\t\t\tlet d = max - min;\n\n\t\t\tif (d !== 0) {\n\t\t\t\ts = (l === 0 || l === 1) ? 0 : (max - l) / Math.min(l, 1 - l);\n\n\t\t\t\tswitch (max) {\n\t\t\t\t\tcase r: h = (g - b) / d + (g < b ? 6 : 0); break;\n\t\t\t\t\tcase g: h = (b - r) / d + 2; break;\n\t\t\t\t\tcase b: h = (r - g) / d + 4;\n\t\t\t\t}\n\n\t\t\t\th = h * 60;\n\t\t\t}\n\n\t\t\treturn [h, s * 100, l * 100];\n\t\t}\n\t},\n\t// Adapted from https://en.wikipedia.org/wiki/HSL_and_HSV#HSL_to_RGB_alternative\n\tto: {\n\t\tsrgb (hsl) {\n\t\t\tlet [h, s, l] = hsl;\n\t\t\th = h % 360;\n\n\t\t\tif (h < 0) {\n\t\t\t\th += 360;\n\t\t\t}\n\n\t\t\ts /= 100;\n\t\t\tl /= 100;\n\n\t\t\tfunction f(n) {\n\t\t\t\tlet k = (n + h/30) % 12;\n\t\t\t\tlet a = s * Math.min(l, 1 - l);\n\t\t\t\treturn l - a * Math.max(-1, Math.min(k - 3, 9 - k, 1));\n\t\t\t}\n\n\t\t\treturn [f(0), f(8), f(4)];\n\t\t}\n\t},\n\n\tparse (str, parsed = Color.parseFunction(str)) {\n\t\tif (parsed && /^hsla?$/.test(parsed.name)) {\n\t\t\tlet hsl = parsed.args;\n\n\t\t\t // percentages are converted to [0, 1] by parseFunction\n\t\t\thsl[1] *= 100;\n\t\t\thsl[2] *= 100;\n\n\t\t\treturn {\n\t\t\t\tspaceId: \"hsl\",\n\t\t\t\tcoords: hsl.slice(0, 3),\n\t\t\t\talpha: hsl[3]\n\t\t\t};\n\t\t}\n\t},\n\n\tinstance: {\n\t\ttoString ({precision, commas, format, inGamut, ...rest} = {}) {\n\t\t\tif (!format) {\n\t\t\t\tformat = (c, i) => i > 0? c + \"%\" : c;\n\t\t\t}\n\n\t\t\treturn Color.prototype.toString.call(this, {\n\t\t\t\tinGamut: true, // hsl() out of gamut makes no sense\n\t\t\t\tcommas, format,\n\t\t\t\tname: \"hsl\" + (commas && this.alpha < 1? \"a\" : \"\"),\n\t\t\t\t...rest\n\t\t\t});\n\t\t}\n\t}\n});\n\nexport default Color;\nexport {util, angles};\n","import Color, {angles} from \"./hsl.js\";\n\n// The Hue, Whiteness Blackness (HWB) colorspace\n// See https://drafts.csswg.org/css-color-4/#the-hwb-notation\n// Note that, like HSL, calculations are done directly on\n// gamma-corrected sRGB values rather than linearising them first.\n\nColor.defineSpace({\n\tid: \"hwb\",\n\tname: \"HWB\",\n\tcoords: {\n\t\thue: angles.range,\n\t\twhiteness: [0, 100],\n\t\tblackness: [0, 100]\n\t},\n\tinGamut (coords, epsilon) {\n\t\tlet rgb = this.to.srgb(coords);\n\t\treturn Color.inGamut(\"srgb\", rgb, {epsilon: epsilon});\n\t},\n\t white: Color.whites.D65,\n\n\tfrom: {\n\t\tsrgb (rgb) {\n\t\t\tlet hsl = Color.spaces.hsl.from.srgb(rgb);\n\t\t\tlet h = hsl[0];\n\t\t\t// calculate white and black\n\t\t\tlet w = Math.min(...rgb);\n\t\t\tlet b = 1 - Math.max(...rgb);\n\t\t\tw *= 100;\n\t\t\tb *= 100;\n\t\t\treturn [h, w, b];\n\t\t},\n\n\t\thsv (hsv) {\n\t\t\tlet [h, s, v] = hsv;\n\n\t\t\treturn [h, v * (100 - s) / 100, 100 - v];\n\t\t},\n\n\t\thsl (hsl) {\n\t\t\tlet hsv = Color.spaces.hsv.from.hsl(hsl);\n\t\t\treturn this.hsv(hsv);\n\t\t}\n\t},\n\n\tto: {\n\t\tsrgb (hwb) {\n\t\t\tlet [h, w, b] = hwb;\n\n\t\t\t// Now convert percentages to [0..1]\n\t\t\tw /= 100;\n\t\t\tb /= 100;\n\n\t\t\t// Achromatic check (white plus black >= 1)\n\t\t\tlet sum = w + b;\n\t\t\tif (sum >= 1) {\n\t\t\t\t let gray = w / sum;\n\t\t\t\t return [gray, gray, gray];\n\t\t\t}\n\n\t\t\t// From https://drafts.csswg.org/css-color-4/#hwb-to-rgb\n\t\t\tlet rgb = Color.spaces.hsl.to.srgb([h, 100, 50]);\n\t\t\tfor (var i = 0; i < 3; i++) {\n\t\t\t\trgb[i] *= (1 - w - b);\n\t\t\t\trgb[i] += w;\n\t\t\t}\n\t\t\treturn rgb;\n\t\t},\n\n\t\thsv (hwb) {\n\t\t\tlet [h, w, b] = hwb;\n\n\t\t\t// Now convert percentages to [0..1]\n\t\t\tw /= 100;\n\t\t\tb /= 100;\n\n\t\t\t// Achromatic check (white plus black >= 1)\n\t\t\tlet sum = w + b;\n\t\t\tif (sum >= 1) {\n\t\t\t\t let gray = w / sum;\n\t\t\t\t return [h, 0, gray * 100];\n\t\t\t}\n\n\t\t\tlet v = (1 - b);\n\t\t\tlet s = (v === 0) ? 0 : 1 - w / v;\n\t\t\treturn [h, s * 100, v * 100];\n\t\t},\n\n\t\thsl (hwb) {\n\t\t\tlet hsv = Color.spaces.hwb.to.hsv(hwb);\n\t\t\treturn (Color.spaces.hsv.to.hsl(hsv));\n\t\t}\n\t},\n\n\t parse (str, parsed = Color.parseFunction(str)) {\n\t\t  if (parsed && /^hwba?$/.test(parsed.name)) {\n\t\t\tlet hwb = parsed.args;\n\n\t\t\t // white and black percentages are converted to [0, 1] by parseFunction\n\t\t\thwb[1] *= 100;\n\t\t\thwb[2] *= 100;\n\n\t\t\treturn {\n\t\t\t\tspaceId: \"hwb\",\n\t\t\t\tcoords: hwb.slice(0, 3),\n\t\t\t\talpha: hwb[3]\n\t\t\t};\n\t\t}\n\t },\n\n\t instance: {\n\t\ttoString ({format, commas, inGamut, ...rest} = {}) {\n\t\t\t\tif (!format) {\n\t\t\t\tformat = (c, i) => i > 0? c + \"%\" : c;\n\t\t\t}\n\n\t\t\treturn Color.prototype.toString.call(this, {\n\t\t\t\tinGamut: true, // hwb() out of gamut makes no sense\n\t\t\t\tcommas: false,  // never commas\n\t\t\t\tformat,\n\t\t\t\tname: \"hwb\",\n\t\t\t\t...rest\n\t\t\t});\n\t\t  }\n\t }\n});\n","import Color, {angles} from \"./hsl.js\";\n\n// The Hue, Whiteness Blackness (HWB) colorspace\n// See https://drafts.csswg.org/css-color-4/#the-hwb-notation\n// Note that, like HSL, calculations are done directly on\n// gamma-corrected sRGB values rather than linearising them first.\n\nColor.defineSpace({\n\tid: \"hsv\",\n\tname: \"HSV\",\n\tcoords: {\n\t\thue: angles.range,\n\t\tsaturation: [0, 100],\n\t\tvalue: [0, 100]\n\t},\n\tinGamut (coords, epsilon) {\n\t\tlet hsl = this.to.hsl(coords);\n\t\treturn Color.spaces.hsl.inGamut(hsl, {epsilon: epsilon});\n\t},\n\twhite: Color.whites.D65,\n\n\tfrom: {\n\t\t// https://en.wikipedia.org/wiki/HSL_and_HSV#Interconversion\n\t\thsl (hsl) {\n\t\t\tlet [h, s, l] = hsl;\n\t\t\ts /= 100;\n\t\t\tl /= 100;\n\n\t\t\tlet v = l + s * Math.min(l, 1 - l);\n\n\t\t\treturn [\n\t\t\t\th, // h is the same\n\t\t\t\tv === 0? 0 : 200 * (1 - l / v), // s\n\t\t\t\t100 * v\n\t\t\t];\n\t\t},\n\t},\n\n\tto: {\n\t\t// https://en.wikipedia.org/wiki/HSL_and_HSV#Interconversion\n\t\thsl (hsv) {\n\t\t\tlet [h, s, v] = hsv;\n\n\t\t\ts /= 100;\n\t\t\tv /= 100;\n\n\t\t\tlet l = v * (1 - s/2);\n\n\t\t\treturn [\n\t\t\t\th, // h is the same\n\t\t\t\t(l === 0 || l === 1)? 0 : ((v - l) / Math.min(l, 1 - l)) * 100,\n\t\t\t\tl * 100\n\t\t\t];\n\t\t}\n\t}\n});\n","import Color from \"./srgb.js\";\n\nColor.defineSpace({\n\tinherits: \"srgb\",\n\tid: \"p3\",\n\tname: \"P3\",\n\tcssId: \"display-p3\",\n\t// Gamma correction is the same as sRGB\n\t// convert an array of display-p3 values to CIE XYZ\n\t// using  D65 (no chromatic adaptation)\n\t// http://www.brucelindbloom.com/index.html?Eqn_RGB_XYZ_Matrix.html\n\t// Functions are the same as sRGB, just with different matrices\n\ttoXYZ_M: [\n\t\t[0.4865709486482162, 0.26566769316909306, 0.1982172852343625],\n\t\t[0.2289745640697488, 0.6917385218365064,  0.079286914093745],\n\t\t[0.0000000000000000, 0.04511338185890264, 1.043944368900976]\n\t],\n\tfromXYZ_M: [\n\t\t[ 2.493496911941425,   -0.9313836179191239, -0.40271078445071684],\n\t\t[-0.8294889695615747,   1.7626640603183463,  0.023624685841943577],\n\t\t[ 0.03584583024378447, -0.07617238926804182, 0.9568845240076872]\n\t]\n});\n","import Color from \"./srgb.js\";\n\nColor.defineSpace({\n\tinherits: \"srgb\",\n\tid: \"a98rgb\",\n\tname: \"Adobe 98 RGB compatible\",\n\tcssId: \"a98-rgb\",\n\ttoLinear(RGB) {\n\t\treturn RGB.map(val => Math.pow(Math.abs(val), 563/256)*Math.sign(val));\n\t},\n\ttoGamma(RGB) {\n\t\treturn RGB.map(val => Math.pow(Math.abs(val), 256/563)*Math.sign(val));\n\t},\n\t// convert an array of linear-light a98-rgb values to CIE XYZ\n\t// http://www.brucelindbloom.com/index.html?Eqn_RGB_XYZ_Matrix.html\n\t// has greater numerical precision than section 4.3.5.3 of\n\t// https://www.adobe.com/digitalimag/pdfs/AdobeRGB1998.pdf\n\t// but the values below were calculated from first principles\n\t// from the chromaticity coordinates of R G B W\n\ttoXYZ_M: [\n\t\t[ 0.5766690429101305,   0.1855582379065463,   0.1882286462349947  ],\n\t\t[ 0.29734497525053605,  0.6273635662554661,   0.07529145849399788 ],\n\t\t[ 0.02703136138641234,  0.07068885253582723,  0.9913375368376388  ]\n\t],\n\tfromXYZ_M: [\n\t\t[  2.0415879038107465,    -0.5650069742788596,   -0.34473135077832956 ],\n\t\t[ -0.9692436362808795,     1.8759675015077202,    0.04155505740717557 ],\n\t\t[  0.013444280632031142,  -0.11836239223101838,   1.0151749943912054  ]\n\t]\n});\n","import Color from \"./srgb.js\";\n\nColor.defineSpace({\n\tinherits: \"srgb\",\n\tid: \"prophoto\",\n\tname: \"ProPhoto\",\n\tcssId: \"prophoto-rgb\",\n\twhite: Color.whites.D50,\n\ttoLinear(RGB) {\n\t\t// Transfer curve is gamma 1.8 with a small linear portion\n\t\tconst Et2 = 16/512;\n\t\treturn RGB.map(function (val) {\n\t\t\tif (val < Et2) {\n\t\t\t\treturn val / 16;\n\t\t\t}\n\n\t\t\treturn Math.pow(val, 1.8);\n\t\t});\n\t},\n\ttoGamma(RGB) {\n\t\tconst Et = 1/512;\n\t\treturn RGB.map(function (val) {\n\t\t\tif (val >= Et) {\n\t\t\t\treturn Math.pow(val, 1/1.8);\n\t\t\t}\n\n\t\t\treturn 16 * val;\n\t\t});\n\t},\n\t// convert an array of  prophoto-rgb values to CIE XYZ\n\t// using  D50 (so no chromatic adaptation needed afterwards)\n\t// http://www.brucelindbloom.com/index.html?Eqn_RGB_XYZ_Matrix.html\n\ttoXYZ_M: [\n\t\t[ 0.7977604896723027,  0.13518583717574031,  0.0313493495815248     ],\n\t\t[ 0.2880711282292934,  0.7118432178101014,   0.00008565396060525902 ],\n\t\t[ 0.0,                 0.0,                  0.8251046025104601     ]\n\t],\n\tfromXYZ_M: [\n\t\t[  1.3457989731028281,  -0.25558010007997534,  -0.05110628506753401 ],\n\t\t[ -0.5446224939028347,   1.5082327413132781,    0.02053603239147973 ],\n\t\t[  0.0,                  0.0,                   1.2119675456389454  ]\n\t]\n});\n","import Color, {util} from \"./srgb.js\";\n\nColor.defineSpace({\n\tinherits: \"srgb\",\n\tid: \"rec2020\",\n\tname: \"REC.2020\",\n\tα: 1.09929682680944,\n\tβ: 0.018053968510807,\n\t// Non-linear transfer function from Rec. ITU-R BT.2020-2 table 4\n\ttoLinear(RGB) {\n\t\tconst {α, β} = this;\n\n\t\treturn RGB.map(function (val) {\n\t\t\tif (val < β * 4.5 ) {\n\t\t\t\treturn val / 4.5;\n\t\t\t}\n\n\t\t\treturn Math.pow((val + α -1 ) / α, 1/0.45);\n\t\t});\n\t},\n\ttoGamma(RGB) {\n\t\tconst {α, β} = this;\n\n\t\treturn RGB.map(function (val) {\n\t\t\tif (val >= β ) {\n\t\t\t\treturn α * Math.pow(val, 0.45) - (α - 1);\n\t\t\t}\n\n\t\t\treturn 4.5 * val;\n\t\t});\n\t},\n\t// convert an array of linear-light rec2020 values to CIE XYZ\n\t// using  D65 (no chromatic adaptation)\n\t// http://www.brucelindbloom.com/index.html?Eqn_RGB_XYZ_Matrix.html\n\t// 0 is actually calculated as  4.994106574466076e-17\n\ttoXYZ_M: [\n\t\t[ 0.6369580483012914, 0.14461690358620832,  0.1688809751641721  ],\n\t\t[ 0.2627002120112671, 0.6779980715188708,   0.05930171646986196 ],\n\t\t[ 0.000000000000000,  0.028072693049087428, 1.060985057710791   ]\n\t],\n\t// from ITU-R BT.2124-0 Annex 2 p.3\n\tfromXYZ_M: [\n\t\t[  1.716651187971268,  -0.355670783776392, -0.253366281373660  ],\n\t\t[ -0.666684351832489,   1.616481236634939,  0.0157685458139111 ],\n\t\t[  0.017639857445311,  -0.042770613257809,  0.942103121235474  ]\n\t]\n});\n\nexport default Color;\nexport {util};\n","import Color, {util} from \"./../color.js\";\n\nColor.defineSpace({\n// Absolute CIE XYZ, with a D65 whitepoint,\n// as used in most HDR colorspaces as a starting point.\n// SDR spaces are converted per BT.2048\n// so that diffuse, media white is 203 cd/m²\n    id: \"absxyzd65\",\n    name: \"Absolute XYZ D65\",\n\tcoords: {\n\t\tXa: [0, 9504.7],\n\t\tYa: [0, 10000],\n\t\tZa: [0, 10888.3]\n\t},\n    white: Color.whites.D65,\n    Yw: 203,\t// absolute luminance of media white\n\tinGamut: coords => true,\n    fromXYZ (XYZ) {\n\n\t\tconst {Yw} = this;\n\n\t\t// Make XYZ absolute, not relative to media white\n\t\t// Maximum luminance in PQ is 10,000 cd/m²\n        // Relative XYZ has Y=1 for media white\n\n        return XYZ.map (function (val) {\n\t\t\treturn Math.max(val * Yw, 0);\n\t\t});\n    },\n    toXYZ (AbsXYZ) {\n\n\t\t// Convert to media-white relative XYZ\n\n\t\tconst {Yw} = this;\n\n\t\tlet XYZ = AbsXYZ.map (function (val) {\n\t\t\treturn Math.max(val / Yw, 0);\n        });\n\n\t\treturn XYZ;\n\t}\n});\n","import Color, {util} from \"./../color.js\";\n\nColor.defineSpace({\n\tid: \"jzazbz\",\n\tcssid: \"Jzazbz\",\n    name: \"Jzazbz\",\n    coords: {\n\t\tJz: [0, 1],\n\t\taz: [-0.5, 0.5],\n\t\tbz: [-0.5, 0.5]\n    },\n    inGamut: coords => true,\n\t// Note that XYZ is relative to D65\n\twhite: Color.whites.D65,\n\tb: 1.15,\n\tg: 0.66,\n\tn:2610 / (2 ** 14),\n\tninv: (2 ** 14) / 2610,\n\tc1: 3424 / (2 ** 12),\n\tc2: 2413 / (2 ** 7),\n\tc3: 2392 / (2 ** 7),\n\tp: 1.7 * 2523 / (2 ** 5),\n\tpinv: (2 ** 5) / (1.7 * 2523),\n\td: -0.56,\n\td0: 1.6295499532821566E-11,\n\tXYZtoCone_M: [\n\t\t[  0.41478972, 0.579999,  0.0146480 ],\n\t\t[ -0.2015100,  1.120649,  0.0531008 ],\n\t\t[ -0.0166008,  0.264800,  0.6684799 ]\n\t],\n\t// XYZtoCone_M inverted\n\tConetoXYZ_M: [\n\t\t[  1.9242264357876067,  -1.0047923125953657,  0.037651404030618   ],\n\t\t[  0.35031676209499907,  0.7264811939316552, -0.06538442294808501 ],\n\t\t[ -0.09098281098284752, -0.3127282905230739,  1.5227665613052603  ]\n\t],\n\tConetoIab_M: [\n\t\t[  0.5,       0.5,       0        ],\n\t\t[  3.524000, -4.066708,  0.542708 ],\n\t\t[  0.199076,  1.096799, -1.295875 ]\n\t],\n\t// ConetoIab_M inverted\n\tIabtoCone_M: [\n\t\t[ 1,                   0.1386050432715393,   0.05804731615611886 ],\n\t\t[ 0.9999999999999999, -0.1386050432715393,  -0.05804731615611886 ],\n\t\t[ 0.9999999999999998, -0.09601924202631895, -0.8118918960560388  ]\n\t],\n    fromXYZ (XYZ) {\n\n\t\tconst {b, g, n, p, c1, c2, c3, d, d0, XYZtoCone_M, ConetoIab_M} = this;\n\n\t\t// First make XYZ absolute, not relative to media white\n\t\t// Maximum luminance in PQ is 10,000 cd/m²\n\t\t// Relative XYZ has Y=1 for media white\n\t\t// BT.2048 says media white Y=203 at PQ 58\n\n\t\t// console.log({XYZ});\n\n\t\tlet [ Xa, Ya, Za ] = Color.spaces.absxyzd65.fromXYZ(XYZ);\n\t\t// console.log({Xa, Ya, Za});\n\n\n\t\t// modify X and Y\n\t\tlet Xm = (b * Xa) - ((b - 1) * Za);\n\t\tlet Ym = (g * Ya) - ((g - 1) * Xa);\n\t\t// console.log({Xm, Ym, Za});\n\n\t\t// move to LMS cone domain\n\t\tlet LMS = util.multiplyMatrices(XYZtoCone_M, [ Xm, Ym, Za ]);\n\t\t// console.log({LMS});\n\n\t\t// PQ-encode LMS\n\t\tlet PQLMS = LMS.map (function (val) {\n\t\t\tlet num = c1 + (c2 * ((val / 10000) ** n));\n\t\t\tlet denom = 1 + (c3 * ((val / 10000) ** n));\n\t\t\t// console.log({val, num, denom});\n\t\t\treturn (num / denom)  ** p;\n\t\t});\n\t\t// console.log({PQLMS});\n\n\t\t// almost there, calculate Iz az bz\n\t\tlet [ Iz, az, bz] = util.multiplyMatrices(ConetoIab_M, PQLMS);\n\t\t// console.log({Iz, az, bz});\n\n\t\tlet Jz = ((1 + d) * Iz) / (1 + (d * Iz)) - d0;\n\t\treturn [Jz, az, bz];\n\n    },\n    toXYZ(Jzazbz) {\n\n\t\tconst {b, g, ninv, pinv, c1, c2, c3, d, d0, ConetoXYZ_M, IabtoCone_M} = this;\n\n\t\tlet [Jz, az, bz] = Jzazbz;\n\t\tlet Iz = (Jz + d0) / (1 + d - d * (Jz + d0));\n\t\t// console.log({Iz});\n\n\t\t// bring into LMS cone domain\n\t\tlet PQLMS = util.multiplyMatrices(IabtoCone_M, [ Iz, az, bz ]);\n\t\t// console.log({PQLMS});\n\n\t\t// convert from PQ-coded to linear-light\n\t\tlet LMS = PQLMS.map(function (val){\n\t\t\tlet num = (c1 - (val ** pinv));\n\t\t\tlet denom = (c3 * (val ** pinv)) - c2;\n\t\t\tlet x = 10000 * ((num / denom) ** ninv);\n\t\t\t// console.log({x, num, denom})\n\t\t\treturn (x); \t// luminance relative to diffuse white, [0, 70 or so].\n\t\t});\n\t\t// console.log({LMS});\n\n\t\t// modified abs XYZ\n\t\tlet [ Xm, Ym, Za ] = util.multiplyMatrices(ConetoXYZ_M, LMS);\n\t\t// console.log({sXm, Ym, Za});\n\n\t\t// restore standard D50 relative XYZ, relative to media white\n\t\tlet Xa = (Xm + ((b -1) * Za)) / b;\n\t\tlet Ya = (Ym + ((g -1) * Xa)) / g;\n\t\treturn Color.spaces.absxyzd65.toXYZ([ Xa, Ya, Za ]);\n    },\n\tparse (str, parsed = Color.parseFunction(str)) {\n\t\tif (parsed && parsed.name === \"jzabz\") {\n\t\t\treturn {\n\t\t\t\tspaceId: \"jzazbz\",\n\t\t\t\tcoords: parsed.args.slice(0, 3),\n\t\t\t\talpha: parsed.args.slice(3)[0]\n\t\t\t};\n\t\t}\n\t},\n\tinstance: {\n\t\ttoString ({format, ...rest} = {}) {\n\t\t\treturn Color.prototype.toString.call(this, {name: \"jzazbz\", format, ...rest});\n\t\t}\n\t}\n});\n\nexport default Color;\nexport {util};\n","import Color from \"./../color.js\";\nimport \"./jzazbz.js\";\nimport * as angles from \"../angles.js\";\n\nColor.defineSpace({\n\tid: \"jzczhz\",\n\tname: \"JzCzHz\",\n\tcoords: {\n\t\tJz: [0, 1],\n\t\tchroma: [0, 1],\n\t\thue: angles.range,\n\t},\n\tinGamut: coords => true,\n\twhite: Color.whites.D65,\n\tfrom: {\n\t\tjzazbz (jzazbz) {\n\t\t\t// Convert to polar form\n\t\t\tlet [Jz, az, bz] = jzazbz;\n\t\t\tlet hue;\n\t\t\tconst ε = 0.0002; // chromatic components much smaller than a,b\n\n\t\t\tif (Math.abs(az) < ε && Math.abs(bz) < ε) {\n\t\t\t\thue = NaN;\n\t\t\t}\n\t\t\telse {\n\t\t\t\thue = Math.atan2(bz, az) * 180 / Math.PI;\n\t\t\t}\n\n\t\t\treturn [\n\t\t\t\tJz, // Jz is still Jz\n\t\t\t\tMath.sqrt(az ** 2 + bz ** 2), // Chroma\n\t\t\t\tangles.constrain(hue) // Hue, in degrees [0 to 360)\n\t\t\t];\n\t\t}\n\t},\n\tto: {\n\t\tjzazbz (jzczhz) {\n\t\t\t// Convert from polar form\n\t\t\t// debugger;\n\t\t\treturn [\n\t\t\t\tjzczhz[0], // Jz is still Jz\n\t\t\t\tjzczhz[1] * Math.cos(jzczhz[2] * Math.PI / 180), // az\n\t\t\t\tjzczhz[1] * Math.sin(jzczhz[2] * Math.PI / 180)  // bz\n\t\t\t];\n\t\t}\n\t},\n\tparse (str, parsed = Color.parseFunction(str)) {\n\t\tif (parsed && parsed.name === \"jzczhz\") {\n\t\t\tlet Jz = parsed.args[0];\n\n\t\t\treturn {\n\t\t\t\tspaceId: \"jzczhz\",\n\t\t\t\tcoords: parsed.args.slice(0, 3),\n\t\t\t\talpha: parsed.args.slice(3)[0]\n\t\t\t};\n\t\t}\n\t},\n\n});\n\nexport default Color;\nexport {angles};\n","import Color, {util} from \"./rec2020.js\";\n\nconst rec2020 = Color.spaces.rec2020;\n\nColor.defineSpace({\n\t// Only the PQ form of ICtCp is implemented here. There is also an HLG form.\n\t// from Dolby, \"WHAT IS ICTCP?\"\n\t// https://professional.dolby.com/siteassets/pdfs/ictcp_dolbywhitepaper_v071.pdf\n\t// and\n\t// Dolby, \"Perceptual Color Volume\n\t// Measuring the Distinguishable Colors of HDR and WCG Displays\"\n\t// https://professional.dolby.com/siteassets/pdfs/dolby-vision-measuring-perceptual-color-volume-v7.1.pdf\n\tid: \"ictcp\",\n\tname: \"ICTCP\",\n\t// From BT.2100-2 page 7:\n\t// During production, signal values are expected to exceed the\n\t// range E′ = [0.0 : 1.0]. This provides processing headroom and avoids\n\t// signal degradation during cascaded processing. Such values of E′,\n\t// below 0.0 or exceeding 1.0, should not be clipped during production\n\t// and exchange.\n\t// Values below 0.0 should not be clipped in reference displays (even\n\t// though they represent “negative” light) to allow the black level of\n\t// the signal (LB) to be properly set using test signals known as “PLUGE”\n\tcoords: {\n\t\tI: [0, 1],\t\t\t// Constant luminance\n\t\tCT: [-0.5, 0.5],\t// Full BT.2020 gamut in range [-0.5, 0.5]\n\t\tCP: [-0.5, 0.5]\n\t},\n\tinGamut: coords => true,\n\t// Note that XYZ is relative to D65\n\twhite: Color.whites.D65,\n\tc1: 3424 / 4096,\n\tc2: 2413 / 128,\n\tc3: 2392 / 128,\n\tm1: 2610 / 16384,\n\tm2: 2523 / 32,\n\tim1: 16384 / 2610,\n\tim2: 32 / 2523,\n\t// The matrix below includes the 4% crosstalk components\n\t// and is from the Dolby \"What is ICtCp\" paper\"\n\tXYZtoLMS_M: [\n\t\t[ 0.3592,  0.6976, -0.0358],\n\t\t[-0.1922,  1.1004,  0.0755],\n\t\t[ 0.0070,  0.0749,  0.8434]\n\t],\n\t// linear-light Rec.2020 to LMS, again with crosstalk\n\t// rational terms from Jan Fröhlich,\n\t// Encoding High Dynamic Range andWide Color Gamut Imagery, p.97\n\t// and ITU-R BT.2124-0 p.2\n\tRec2020toLMS_M: [\n\t\t[ 1688 / 4096,  2146 / 4096,   262 / 4096 ],\n\t\t[  683 / 4096,  2951 / 4096,   462 / 4096 ],\n\t\t[   99 / 4096,   309 / 4096,  3688 / 4096 ]\n\t],\n\t// this includes the Ebner LMS coefficients,\n\t// the rotation, and the scaling to [-0.5,0.5] range\n\t// rational terms from Fröhlich p.97\n\t// and ITU-R BT.2124-0 pp.2-3\n\tLMStoIPT_M: [\n\t\t[  2048 / 4096,   2048 / 4096,       0      ],\n\t\t[  6610 / 4096, -13613 / 4096,  7003 / 4096 ],\n\t\t[ 17933 / 4096, -17390 / 4096,  -543 / 4096 ]\n\t],\n\t// inverted matrices, calculated from the above\n\tIPTtoLMS_M: [\n\t\t[0.99998889656284013833, 0.00860505014728705821,  0.1110343715986164786 ],\n\t\t[1.0000111034371598616, -0.00860505014728705821, -0.1110343715986164786 ],\n\t\t[1.000032063391005412,   0.56004913547279000113, -0.32063391005412026469],\n\t],\n\tLMStoRec2020_M: [\n\t\t[ 3.4375568932814012112,   -2.5072112125095058195,   0.069654319228104608382],\n\t\t[-0.79142868665644156125,   1.9838372198740089874,  -0.19240853321756742626 ],\n\t\t[-0.025646662911506476363, -0.099240248643945566751, 1.1248869115554520431  ]\n\t],\n\tLMStoXYZ_M: [\n\t\t[ 2.0701800566956135096,   -1.3264568761030210255,    0.20661600684785517081 ],\n\t\t[ 0.36498825003265747974,   0.68046736285223514102,  -0.045421753075853231409],\n\t\t[-0.049595542238932107896, -0.049421161186757487412,  1.1879959417328034394  ]\n\t],\n\tfromXYZ (XYZ) {\n\n\t\tconst {XYZtoLMS_M} = this;\n\t\t// console.log ({c1, c2, c3, m1, m2});\n\n\t\t// Make XYZ absolute, not relative to media white\n\t\t// Maximum luminance in PQ is 10,000 cd/m²\n\t\t// Relative XYZ has Y=1 for media white\n\t\t// BT.2048 says media white Y=203 at PQ 58\n\t\t// This also does the D50 to D65 adaptation\n\n\t\tlet [ Xa, Ya, Za ] = Color.spaces.absxyzd65.fromXYZ(XYZ);\n\t\t// console.log({Xa, Ya, Za});\n\n\t\t// move to LMS cone domain\n\t\tlet LMS = util.multiplyMatrices(XYZtoLMS_M, [ Xa, Ya, Za ]);\n\t\t// console.log({LMS});\n\n\t\treturn this.LMStoICtCp(LMS);\n\t},\n\ttoXYZ (ICtCp) {\n\n\t\tconst {LMStoXYZ_M} = this;\n\n\t\tlet LMS = this.ICtCptoLMS(ICtCp);\n\n\t\tlet XYZa = util.multiplyMatrices(LMStoXYZ_M, LMS);\n\n\t\t// convert from Absolute, D65 XYZ to media white relative, D50 XYZ\n\t\treturn Color.spaces.absxyzd65.toXYZ(XYZa);\n\n\t},\n\tLMStoICtCp (LMS) {\n\n\t\tconst {LMStoIPT_M, c1, c2, c3, m1, m2} = this;\n\t\t// console.log ({c1, c2, c3, m1, m2});\n\n\t\t// apply the PQ EOTF\n\t\t// we can't ever be dividing by zero because of the \"1 +\" in the denominator\n\t\tlet PQLMS = LMS.map (function (val) {\n\t\t\tlet num = c1 + (c2 * ((val / 10000) ** m1));\n\t\t\tlet denom = 1 + (c3 * ((val / 10000) ** m1));\n\t\t\t// console.log({val, num, denom});\n\t\t\treturn (num / denom)  ** m2;\n\t\t});\n\t\t// console.log({PQLMS});\n\n\t\t// LMS to IPT, with rotation for Y'C'bC'r compatibility\n\t\treturn util.multiplyMatrices(LMStoIPT_M, PQLMS);\n\t},\n\tICtCptoLMS (ICtCp) {\n\n\t\tconst {IPTtoLMS_M, c1, c2, c3, im1, im2} = this;\n\n\t\tlet PQLMS = util.multiplyMatrices(IPTtoLMS_M, ICtCp);\n\n\t\t// From BT.2124-0 Annex 2 Conversion 3\n\t\tlet LMS = PQLMS.map (function (val) {\n\t\t\tlet num  = Math.max((val ** im2) - c1, 0);\n\t\t\tlet denom = (c2 - (c3 * (val ** im2)));\n\t\t\treturn 10000 * ((num / denom) ** im1);\n\t\t});\n\n\t\treturn LMS;\n\t}\n\t// },\n\t// from: {\n\t// \trec2020: function() {\n\n\t// \t}\n\t// },\n\t// to: {\n\t// \trec2020: function() {\n\n\t// \t}\n\t// }\n});\n\nexport default Color;\n","import Color from \"./rec2020.js\";\n\nColor.defineSpace({\n\tinherits: \"rec2020\",\n\tid: \"rec2100pq\",\n\tcssid: \"rec2100-pq\",\n\tname: \"REC.2100-PQ\",\n\tYw: 203,\t// absolute luminance of media white, cd/m²\n\tn: 2610 / (2 ** 14),\n\tninv: (2 ** 14) / 2610,\n\tm: 2523 / (2 ** 5),\n\tminv: (2 ** 5) / 2523,\n\tc1: 3424 / (2 ** 12),\n\tc2: 2413 / (2 ** 7),\n\tc3: 2392 / (2 ** 7),\n\ttoLinear(RGB) {\n\t// given PQ encoded component in range [0, 1]\n\t// return media-white relative linear-light\n\n\t\tconst {Yw, ninv, minv, c1, c2, c3} = this;\n\n\t\treturn RGB.map(function (val) {\n\t\t\tlet x = ((Math.max(((val ** minv) - c1), 0) / (c2 - (c3 * (val ** minv)))) ** ninv);\n\t\t\treturn (x * 10000 / Yw); \t// luminance relative to diffuse white, [0, 70 or so].\n\t\t});\n\t},\n\ttoGamma(RGB) {\n\t// given media-white relative linear-light\n\t// returnPQ encoded component in range [0, 1]\n\n\t\tconst {Yw, n, m, c1, c2, c3} = this;\n\n\t\treturn RGB.map(function (val) {\n\t\t\tlet x = Math.max(val * Yw / 10000, 0); \t// absolute luminance of peak white is 10,000 cd/m².\n\t\t\tlet num = (c1 + (c2 * (x ** n)));\n\t\t\tlet denom = (1 + (c3 * (x ** n)));\n\t\t\t// console.log({x, num, denom});\n\t\t\treturn ((num / denom)  ** m);\n\t\t});\n\t}\n\t// ,\n\t// // convert an array of linear-light rec2120 values to CIE XYZ\n\t// // using  D65 (no chromatic adaptation)\n\t// // http://www.brucelindbloom.com/index.html?Eqn_RGB_XYZ_Matrix.html\n\t// // 0 is actually calculated as  4.994106574466076e-17\n\t// toXYZ_M: [\n\t// \t[0.6369580483012914, 0.14461690358620832,  0.1688809751641721],\n\t// \t[0.2627002120112671, 0.6779980715188708,   0.05930171646986196],\n\t// \t[0.000000000000000,  0.028072693049087428, 1.060985057710791]\n\t// ],\n\t// fromXYZ_M: [\n\t// \t[1.7166511879712674,   -0.35567078377639233, -0.25336628137365974],\n\t// \t[-0.6666843518324892,   1.6164812366349395,   0.01576854581391113],\n\t// \t[0.017639857445310783, -0.042770613257808524, 0.9421031212354738]\n\t// ]\n});\n","import Color, {util} from \"./../color.js\";\n\nColor.defineSpace({\n\tid: \"oklab\",\n\tcssid: \"oklab\",\n    name: \"OKLab\",\n    coords: {\n\t\tL: [ 0, 1],\n\t\ta: [-0.5, 0.5],\n\t\tb: [-0.5, 0.5]\n    },\n    inGamut: coords => true,\n\t// Note that XYZ is relative to D65\n    white: Color.whites.D65,\n\t// Recalculated for consistent reference white\n\t// see https://github.com/w3c/csswg-drafts/issues/6642#issuecomment-943521484\n    XYZtoLMS_M: [\n\t\t[ 0.8190224432164319,    0.3619062562801221,   -0.12887378261216414 ],\n\t\t[ 0.0329836671980271,    0.9292868468965546,     0.03614466816999844 ],\n\t\t[ 0.048177199566046255,  0.26423952494422764,    0.6335478258136937  ]\n\t],\n    // inverse of XYZtoLMS_M\n    LMStoXYZ_M: [\n\t\t[  1.2268798733741557,  -0.5578149965554813,   0.28139105017721583],\n\t\t[ -0.04057576262431372,  1.1122868293970594,  -0.07171106666151701],\n\t\t[ -0.07637294974672142, -0.4214933239627914,   1.5869240244272418 ]\n],\n    LMStoLab_M: [\n\t\t[  0.2104542553,   0.7936177850,  -0.0040720468 ],\n\t\t[  1.9779984951,  -2.4285922050,   0.4505937099 ],\n\t\t[  0.0259040371,   0.7827717662,  -0.8086757660 ]\n\t],\n\t// LMStoIab_M inverted\n\tLabtoLMS_M: [\n        [ 0.99999999845051981432,  0.39633779217376785678,   0.21580375806075880339  ],\n        [ 1.0000000088817607767,  -0.1055613423236563494,   -0.063854174771705903402 ],\n        [ 1.0000000546724109177,  -0.089484182094965759684, -1.2914855378640917399   ]\n    ],\n\tfromXYZ (XYZ) {\n\t\tconst {XYZtoLMS_M, LMStoLab_M} = this;\n\n\t\t// move to LMS cone domain\n\t\tlet LMS = util.multiplyMatrices(XYZtoLMS_M, XYZ);\n\n\t\t// non-linearity\n\t\tlet LMSg = LMS.map (val => Math.cbrt(val));\n\n\t\treturn (util.multiplyMatrices(LMStoLab_M, LMSg));\n\n\t},\n\ttoXYZ (OKLab) {\n\n\t\tconst {LMStoXYZ_M, LabtoLMS_M} = this;\n\n\t\t// move to LMS cone domain\n\t\tlet LMSg = util.multiplyMatrices(LabtoLMS_M, OKLab);\n\n\t\t// restore linearity\n\t\tlet LMS = LMSg.map (val => val ** 3);\n\n\t\treturn (util.multiplyMatrices(LMStoXYZ_M, LMS));\n\t}\n});\n\n\nexport default Color;\nexport {util};\n","import Color, {util} from \"./../color.js\";\nimport \"./oklab.js\";\nimport * as angles from \"../angles.js\";\n\nColor.defineSpace({\n\tid: \"oklch\",\n\tname: \"OKLCh\",\n\tcoords: {\n\t\tlightness: [0, 1],\n\t\tchroma: [0, 1],\n\t\thue: angles.range,\n\t},\n\tinGamut: coords => true,\n\twhite: Color.whites.D65,\n\tfrom: {\n\t\toklab (oklab) {\n\t\t\t// Convert to polar form\n\t\t\tlet [L, a, b] = oklab;\n\t\t\tlet h;\n\t\t\tconst ε = 0.0002; // chromatic components much smaller than a,b\n\n\t\t\tif (Math.abs(a) < ε && Math.abs(b) < ε) {\n\t\t\t\th = NaN;\n\t\t\t}\n\t\t\telse {\n\t\t\t\th = Math.atan2(b, a) * 180 / Math.PI;\n\t\t\t}\n\n\t\t\treturn [\n\t\t\t\tL, // OKLab L is still L\n\t\t\t\tMath.sqrt(a ** 2 + b ** 2), // Chroma\n\t\t\t\tangles.constrain(h) // Hue, in degrees [0 to 360)\n\t\t\t];\n\t\t}\n\t},\n\tto: {\n\t\t// Convert from polar form\n\t\toklab (oklch) {\n\t\t\tlet [L, C, h] = oklch;\n\t\t\tlet a, b;\n\n\t\t\t// check for NaN hue\n\t\t\tif (isNaN(h)) {\n\t\t\t\ta = 0;\n\t\t\t\tb = 0;\n\t\t\t}\n\t\t\telse {\n\t\t\t\ta = C * Math.cos(h * Math.PI / 180);\n\t\t\t\tb = C * Math.sin(h * Math.PI / 180);\n\t\t\t}\n\n\t\t\treturn [ L, a, b ];\n\t\t}\n\t},\n\tparse (str, parsed = Color.parseFunction(str)) {\n\t\tif (parsed && parsed.name === \"oklch\") {\n\t\t\tlet L = parsed.args[0];\n\n\t\t\treturn {\n\t\t\t\tspaceId: \"oklch\",\n\t\t\t\tcoords: parsed.args.slice(0, 3),\n\t\t\t\talpha: parsed.args.slice(3)[0]\n\t\t\t};\n\t\t}\n\t},\n\n});\n\nexport default Color;\nexport {angles};\n","import Color, {util} from \"./color.js\";\n\nColor.CATs = {};\n\nColor.hooks.add(\"chromatic-adaptation-start\", env => {\n\tif (env.options.method) {\n\t\tenv.M = Color.adapt(env.W1, env.W2, env.options.method);\n\t}\n});\n\nColor.hooks.add(\"chromatic-adaptation-end\", env => {\n\tif (!env.M) {\n\t\tenv.M = Color.adapt(env.W1, env.W2, env.options.method);\n\t}\n});\n\nColor.defineCAT = function ({id, toCone_M, fromCone_M}) {\n\t// Use id, toCone_M, fromCone_M like variables\n\tColor.CATs[id] = arguments[0];\n};\n\nColor.adapt = function (W1, W2, id = \"Bradford\") {\n\t// adapt from a source whitepoint or illuminant W1\n\t// to a destination whitepoint or illuminant W2,\n\t// using the given chromatic adaptation transform (CAT)\n\t// debugger;\n\tlet method = Color.CATs[id];\n\n\tlet [ρs, γs, βs] = util.multiplyMatrices(method.toCone_M, W1);\n\tlet [ρd, γd, βd] = util.multiplyMatrices(method.toCone_M, W2);\n\n\t// all practical illuminants have non-zero XYZ so no division by zero can occur below\n\tlet scale = [\n\t\t[ρd/ρs,    0,      0      ],\n\t\t[0,        γd/γs,  0      ],\n\t\t[0,        0,      βd/βs  ]\n\t];\n\t// console.log({scale});\n\n\tlet scaled_cone_M = util.multiplyMatrices(scale, method.toCone_M);\n\tlet adapt_M\t= util.multiplyMatrices(method.fromCone_M, scaled_cone_M);\n\t// console.log({scaled_cone_M, adapt_M});\n\treturn adapt_M;\n};\n\nColor.defineCAT({\n\tid: \"von Kries\",\n\ttoCone_M: [\n\t\t[  0.4002400,  0.7076000, -0.0808100 ],\n\t\t[ -0.2263000,  1.1653200,  0.0457000 ],\n\t\t[  0.0000000,  0.0000000,  0.9182200 ]\n\t],\n\tfromCone_M: [\n\t\t[  1.8599364, -1.1293816,  0.2198974 ],\n\t\t[  0.3611914,  0.6388125, -0.0000064 ],\n\t\t[  0.0000000,  0.0000000,  1.0890636 ]\n\t]\n});\nColor.defineCAT({\n\tid: \"Bradford\",\n\t// Convert an array of XYZ values in the range 0.0 - 1.0\n\t// to cone fundamentals\n\ttoCone_M: [\n\t\t[  0.8951000,  0.2664000, -0.1614000 ],\n\t\t[ -0.7502000,  1.7135000,  0.0367000 ],\n\t\t[  0.0389000, -0.0685000,  1.0296000 ]\n\t],\n\t// and back\n\tfromCone_M: [\n\t\t[  0.9869929, -0.1470543,  0.1599627 ],\n\t\t[  0.4323053,  0.5183603,  0.0492912 ],\n\t\t[ -0.0085287,  0.0400428,  0.9684867 ]\n\t]\n});\n\nColor.defineCAT({\n\tid: \"CAT02\",\n\t// with complete chromatic adaptation to W2, so D = 1.0\n\ttoCone_M: [\n\t\t[  0.7328000,  0.4296000, -0.1624000 ],\n\t\t[ -0.7036000,  1.6975000,  0.0061000 ],\n\t\t[  0.0030000,  0.0136000,  0.9834000 ]\n\t],\n\tfromCone_M: [\n\t\t[  1.0961238, -0.2788690,  0.1827452 ],\n\t\t[  0.4543690,  0.4735332,  0.0720978 ],\n\t\t[ -0.0096276, -0.0056980,  1.0153256 ]\n\t]\n});\n\nColor.defineCAT({\n\tid: \"CAT16\",\n\ttoCone_M: [\n\t\t[  0.401288,  0.650173, -0.051461 ],\n\t\t[ -0.250268,  1.204414,  0.045854 ],\n\t\t[ -0.002079,  0.048952,  0.953127 ]\n\t],\n\t// the extra precision is needed to avoid roundtripping errors\n\tfromCone_M: [\n\t\t[  1.862067855087233e+0, -1.011254630531685e+0,   1.491867754444518e-1 ],\n\t\t[  3.875265432361372e-1,  6.214474419314753e-1,  -8.973985167612518e-3 ],\n\t\t[ -1.584149884933386e-2, -3.412293802851557e-2,   1.049964436877850e+0 ]\n\t]\n});\n\nObject.assign(Color.whites, {\n\t// whitepoint values from ASTM E308-01 with 10nm spacing, 1931 2 degree observer\n\t// all normalized to Y (luminance) = 1.00000\n\t// Illuminant A is a tungsten electric light, giving a very warm, orange light.\n\tA:  [1.09850, 1.00000, 0.35585],\n\n\t// Illuminant C was an early approximation to daylight: illuminant A with a blue filter.\n\tC:   [0.98074, 1.000000, 1.18232],\n\n\t// The daylight series of illuminants simulate natural daylight.\n\t// The color temperature (in degrees Kelvin/100) ranges from\n\t// cool, overcast daylight (D50) to bright, direct sunlight (D65).\n\tD55: [0.95682, 1.00000, 0.92149],\n\tD75: [0.94972, 1.00000, 1.22638],\n\n\t// Equal-energy illuminant, used in two-stage CAT16\n\tE:   [1.00000, 1.00000, 1.00000],\n\n\t// The F series of illuminants represent flourescent lights\n\tF2:  [0.99186, 1.00000, 0.67393],\n\tF7:  [0.95041, 1.00000, 1.08747],\n\tF11: [1.00962, 1.00000, 0.64350],\n});\n","import Color from \"../color.js\";\nimport \"../CATs.js\";\n// because of the funky whitepoint\n\nColor.defineSpace({\n\tid: \"acescc\",\n\tname: \"ACEScc\",\n\tinherits: \"srgb\",\n\n\t// see S-2014-003 ACEScc – A Logarithmic Encoding of ACES Data\n\t// uses the AP1 primaries, see section 4.3.1 Color primaries\n\tcoords: {\n\t\tred:   [-0.3014, 1.468],\n\t\tgreen: [-0.3014, 1.468],\n\t\tblue:  [-0.3014, 1.468]\n\t},\n\t// Appendix A: \"Very small ACES scene referred values below 7 1/4 stops\n\t// below 18% middle gray are encoded as negative ACEScc values.\n\t// These values should be preserved per the encoding in Section 4.4\n\t// so that all positive ACES values are maintained.\"\n\n\t// The ACES whitepoint\n\t// see TB-2018-001 Derivation of the ACES White Point CIE Chromaticity Coordinates\n\t// also https://github.com/ampas/aces-dev/blob/master/documents/python/TB-2018-001/aces_wp.py\n\twhite: Color.whites.ACES = [0.32168/0.33767, 1.00000, (1.00000 - 0.32168 - 0.33767)/0.33767],\n\t// Similar to D60\n\n\t// from section 4.4.2 Decoding Function\n\ttoLinear(RGB) {\n\n\t\tconst low = (9.72 - 15) / 17.52; // -0.3014\n\t\tconst high = (Math.log2(65504) + 9.72) / 17.52; // 1.468\n\t\tconst ε = 2 ** -16;\n\n\t\treturn RGB.map(function (val) {\n\t\t\tif (val <= low) {\n\t\t\t\treturn (2 ** ((val * 17.52) - 9.72) - ε) * 2; // 0 for low or below\n\t\t\t}\n\t\t\telse if (val < high) {\n\t\t\t\treturn 2 ** ((val * 17.52) - 9.72);\n\t\t\t}\n\t\t\telse { // val >= high\n\t\t\t\treturn 65504;\n\t\t\t}\n\t\t});\n\t},\n\n\t// Non-linear encoding function from S-2014-003, section 4.4.1 Encoding Function\n\ttoGamma(RGB) {\n\n\t\tconst ε = 2 ** -16;\n\n\t\treturn RGB.map(function (val) {\n\t\t\tif (val <= 0) {\n\t\t\t\treturn (Math.log2(ε) + 9.72) / 17.52; // -0.3584\n\t\t\t}\n\t\t\telse if (val < ε) {\n\t\t\t\treturn  (Math.log2(ε + val * 0.5) + 9.72) / 17.52;\n\t\t\t}\n\t\t\telse { // val >= ε\n\t\t\t\treturn  (Math.log2(val) + 9.72) / 17.52;\n\t\t\t}\n\t\t});\n\t},\n\t// encoded media white (rgb 1,1,1) => linear  [ 222.861, 222.861, 222.861 ]\n\t// encoded media black (rgb 0,0,0) => linear [ 0.0011857, 0.0011857, 0.0011857]\n\n\t// convert an array of linear-light ACEScc values to CIE XYZ\n\ttoXYZ_M: [\n\t\t[  0.6624541811085053,   0.13400420645643313,  0.1561876870049078  ],\n\t\t[  0.27222871678091454,  0.6740817658111484,   0.05368951740793705 ],\n\t\t[ -0.005574649490394108, 0.004060733528982826, 1.0103391003129971  ]\n\t],\n\t//\n\tfromXYZ_M: [\n\t\t[  1.6410233796943257,   -0.32480329418479,    -0.23642469523761225  ],\n\t\t[ -0.6636628587229829,    1.6153315916573379,   0.016756347685530137 ],\n\t\t[  0.011721894328375376, -0.008284441996237409, 0.9883948585390215   ]\n\t]\n});\n\n// export default Color;\n","import Color, {util} from \"./color.js\";\nimport * as angles from \"./angles.js\";\n\nlet methods = {\n\trange (...args) {\n\t\treturn Color.range(this, ...args);\n\t},\n\n\t/**\n\t * Return an intermediate color between two colors\n\t * Signatures: color.mix(color, p, options)\n\t *             color.mix(color, options)\n\t *             color.mix(color)\n\t */\n\tmix (color, p = .5, o = {}) {\n\t\tif (util.type(p) === \"object\") {\n\t\t\t[p, o] = [.5, p];\n\t\t}\n\n\t\tlet {space, outputSpace} = o;\n\n\t\tcolor = Color.get(color);\n\t\tlet range = this.range(color, {space, outputSpace});\n\t\treturn range(p);\n\t},\n\n\t/**\n\t * Interpolate to color2 and return an array of colors\n\t * @returns {Array[Color]}\n\t */\n\tsteps (...args) {\n\t\treturn Color.steps(this, ...args);\n\t}\n};\n\nColor.steps = function(color1, color2, options = {}) {\n\tlet range;\n\n\tif (isRange(color1)) {\n\t\t// Tweaking existing range\n\t\t[range, options] = [color1, color2];\n\t\t[color1, color2] = range.rangeArgs.colors;\n\t}\n\n\tlet {\n\t\tmaxDeltaE, deltaEMethod,\n\t\tsteps = 2, maxSteps = 1000,\n\t\t...rangeOptions\n\t} = options;\n\n\tif (!range) {\n\t\tcolor1 = Color.get(color1);\n\t\tcolor2 = Color.get(color2);\n\t\trange = Color.range(color1, color2, rangeOptions);\n\t}\n\n\tlet totalDelta = this.deltaE(color2);\n\tlet actualSteps = maxDeltaE > 0? Math.max(steps, Math.ceil(totalDelta / maxDeltaE) + 1) : steps;\n\tlet ret = [];\n\n\tif (maxSteps !== undefined) {\n\t\tactualSteps = Math.min(actualSteps, maxSteps);\n\t}\n\n\tif (actualSteps === 1) {\n\t\tret = [{p: .5, color: range(.5)}];\n\t}\n\telse {\n\t\tlet step = 1 / (actualSteps - 1);\n\t\tret = Array.from({length: actualSteps}, (_, i) => {\n\t\t\tlet p = i * step;\n\t\t\treturn {p, color: range(p)};\n\t\t});\n\t}\n\n\tif (maxDeltaE > 0) {\n\t\t// Iterate over all stops and find max deltaE\n\t\tlet maxDelta = ret.reduce((acc, cur, i) => {\n\t\t\tif (i === 0) {\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\tlet deltaE = cur.color.deltaE(ret[i - 1].color, deltaEMethod);\n\t\t\treturn Math.max(acc, deltaE);\n\t\t}, 0);\n\n\t\twhile (maxDelta > maxDeltaE) {\n\t\t\t// Insert intermediate stops and measure maxDelta again\n\t\t\t// We need to do this for all pairs, otherwise the midpoint shifts\n\t\t\tmaxDelta = 0;\n\n\t\t\tfor (let i = 1; (i < ret.length) && (ret.length < maxSteps); i++) {\n\t\t\t\tlet prev = ret[i - 1];\n\t\t\t\tlet cur = ret[i];\n\n\t\t\t\tlet p = (cur.p + prev.p) / 2;\n\t\t\t\tlet color = range(p);\n\t\t\t\tmaxDelta = Math.max(maxDelta, color.deltaE(prev.color), color.deltaE(cur.color));\n\t\t\t\tret.splice(i, 0, {p, color: range(p)});\n\t\t\t\ti++;\n\t\t\t}\n\t\t}\n\t}\n\n\tret = ret.map(a => a.color);\n\n\treturn ret;\n};\n\n/**\n * Interpolate to color2 and return a function that takes a 0-1 percentage\n * @returns {Function}\n */\nColor.range = function(color1, color2, options = {}) {\n\tif (isRange(color1)) {\n\t\t// Tweaking existing range\n\t\tlet [range, options] = [color1, color2];\n\t\treturn Color.range(...range.rangeArgs.colors, {...range.rangeArgs.options, ...options});\n\t}\n\n\tlet {space, outputSpace, progression, premultiplied} = options;\n\n\t// Make sure we're working on copies of these colors\n\tcolor1 = new Color(color1);\n\tcolor2 = new Color(color2);\n\n\n\tlet rangeArgs = {colors: [color1, color2], options};\n\n\tif (space) {\n\t\tspace = Color.space(space);\n\t}\n\telse {\n\t\tspace = Color.spaces[Color.defaults.interpolationSpace] || color1.space;\n\t}\n\n\toutputSpace = outputSpace? Color.space(outputSpace) : (color1.space || space);\n\n\tcolor1 = color1.to(space).toGamut();\n\tcolor2 = color2.to(space).toGamut();\n\n\t// Handle hue interpolation\n\t// See https://github.com/w3c/csswg-drafts/issues/4735#issuecomment-635741840\n\tif (space.coords.hue && space.coords.hue.isAngle) {\n\t\tlet arc = options.hue = options.hue || \"shorter\";\n\n\t\t[color1[space.id].hue, color2[space.id].hue] = angles.adjust(arc, [color1[space.id].hue, color2[space.id].hue]);\n\t}\n\n\tif (premultiplied) {\n\t\t// not coping with polar spaces yet\n\t\tcolor1.coords = color1.coords.map (c => c * color1.alpha);\n\t\tcolor2.coords = color2.coords.map (c => c * color2.alpha);\n\t}\n\n\treturn Object.assign(p => {\n\t\tp = progression? progression(p) : p;\n\t\tlet coords = color1.coords.map((start, i) => {\n\t\t\tlet end = color2.coords[i];\n\t\t\treturn interpolate(start, end, p);\n\t\t});\n\t\tlet alpha = interpolate(color1.alpha, color2.alpha, p);\n\t\tlet ret = new Color(space, coords, alpha);\n\n\t\tif (premultiplied) {\n\t\t\t// undo premultiplication\n\t\t\tret.coords = ret.coords.map(c => c / alpha);\n\t\t}\n\n\t\tif (outputSpace !== space) {\n\t\t\tret = ret.to(outputSpace);\n\t\t}\n\n\t\treturn ret;\n\t}, {\n\t\trangeArgs\n\t});\n};\n\nexport function isRange (val) {\n\treturn util.type(val) === \"function\" && val.rangeArgs;\n};\n\n// Helper\nfunction interpolate(start, end, p) {\n\tif (isNaN(start)) {\n\t\treturn end;\n\t}\n\n\tif (isNaN(end)) {\n\t\treturn start;\n\t}\n\n\treturn start + (end - start) * p;\n}\n\nObject.assign(Color.defaults, {\n\tinterpolationSpace: \"lab\"\n});\n\nObject.assign(Color.prototype, methods);\nColor.statify(Object.keys(methods));\n\nexport default Color;\n","import Color from \"../color.js\";\n// More accurate color-difference formulae\n// than the simple 1976 Euclidean distance in Lab\n\n// CMC by the Color Measurement Committee of the\n// Bradford Society of Dyeists and Colorsts, 1994.\n// Uses LCH rather than Lab,\n// with different weights for L, C and H differences\n// A nice increase in accuracy for modest increase in complexity\n\nColor.prototype.deltaECMC = function (sample, {l = 2, c = 1} = {}) {\n\tlet color = this;\n\tsample = Color.get(sample);\n\n\t// Given this color as the reference\n\t// and a sample,\n\t// calculate deltaE CMC.\n\n\t// This implementation assumes the parametric\n\t// weighting factors l:c are 2:1\n\t//  which is typical for non-textile uses.\n\n\tlet [L1, a1, b1] = color.lab;\n\tlet C1 = color.chroma;\n\tlet H1 = color.hue;\n\tlet [L2, a2, b2] = sample.lab;\n\tlet C2 = sample.chroma;\n\n\t// Check for negative Chroma,\n\t// which might happen through\n\t// direct user input of LCH values\n\n\tif (C1 < 0) {\n\t\tC1 = 0;\n\t}\n\tif (C2 < 0) {\n\t\tC2 = 0;\n\t}\n\n\t// we don't need H2 as ΔH is calculated from Δa, Δb and ΔC\n\t// console.log({L1, a1, b1});\n\t// console.log({L2, a2, b2});\n\n\t// Lightness and Chroma differences\n\t// These are (color - sample), unlike deltaE2000\n\tlet ΔL = L1 - L2;\n\tlet ΔC = C1 - C2;\n\t// console.log({ΔL});\n\t// console.log({ΔC});\n\n\tlet Δa = a1 - a2;\n\tlet Δb = b1 - b2;\n\t// console.log({Δa});\n\t// console.log({Δb});\n\n\t// weighted Hue difference, less for larger Chroma difference\n\tconst π = Math.PI;\n\tconst d2r = π / 180;\n\tlet H2 = (Δa ** 2) + (Δb ** 2) - (ΔC ** 2);\n\t// due to roundoff error it is possible that, for zero a and b,\n\t// ΔC > Δa + Δb is 0, resulting in attempting\n\t// to take the square root of a negative number\n\n\t// trying instead the equation from Industrial Color Physics\n\t// By Georg A. Klein\n\n\t// let ΔH = ((a1 * b2) - (a2 * b1)) / Math.sqrt(0.5 * ((C2 * C1) + (a2 * a1) + (b2 * b1)));\n\t// console.log({ΔH});\n\t// This gives the same result to 12 decimal places\n\t// except it sometimes NaNs when trying to root a negative number\n\n\t// let ΔH = Math.sqrt(H2); we never actually use the root, it gets squared again!!\n\n\t// positional corrections to the lack of uniformity of CIELAB\n\t// These are all trying to make JND ellipsoids more like spheres\n\n\t// SL Lightness crispening factor, depends entirely on L1 not L2\n\tlet SL = 0.511;\t// linear portion of the Y to L transfer function\n\tif (L1 >= 16) {\t// cubic portion\n\t\tSL = (0.040975 * L1) / (1 + 0.01765 * L1);\n\t}\n\t// console.log({SL});\n\n\t// SC Chroma factor\n\tlet SC = ((0.0638 * C1) / (1 + 0.0131 * C1)) + 0.638;\n\t// console.log({SC});\n\n\t// Cross term T for blue non-linearity\n\tlet T;\n\tif ( Number.isNaN(H1)) {\n\t\tH1 = 0;\n\t}\n\n\tif (H1 >= 164 && H1 <= 345) {\n\t\tT = 0.56 + Math.abs(0.2 * Math.cos((H1 + 168) * d2r));\n\t}\n\telse {\n\t\tT = 0.36 + Math.abs(0.4 * Math.cos((H1 + 35) * d2r));\n\t}\n\t// console.log({T});\n\n\t// SH Hue factor also depends on C1,\n\tlet C4 = Math.pow(C1, 4);\n\tlet F = Math.sqrt(C4 / (C4 + 1900));\n\tlet SH = SC * ((F * T) + 1 - F);\n\t// console.log({SH});\n\n\t// Finally calculate the deltaE, term by term as root sume of squares\n\tlet dE = (ΔL / (l * SL)) ** 2;\n\tdE += (ΔC / (c * SC)) ** 2;\n\tdE += (H2 / (SH ** 2));\n\t// dE += (ΔH / SH)  ** 2;\n\treturn Math.sqrt(dE);\n\t// Yay!!!\n};\n\nColor.statify([\"deltaECMC\"]);\n","import Color from \"../color.js\";\n\n// deltaE2000 is a statistically significant improvement\n// and is recommended by the CIE and Idealliance\n// especially for color differences less than 10 deltaE76\n// but is wicked complicated\n// and many implementations have small errors!\n// DeltaE2000 is also discontinuous; in case this\n// matters to you, use deltaECMC instead.\n\nColor.prototype.deltaE2000 = function (sample, {kL = 1, kC = 1, kH = 1} = {}) {\n\tlet color = this;\n\tsample = Color.get(sample);\n\n\t// Given this color as the reference\n\t// and the function parameter as the sample,\n\t// calculate deltaE 2000.\n\n\t// This implementation assumes the parametric\n\t// weighting factors kL, kC and kH\n\t// for the influence of viewing conditions\n\t// are all 1, as sadly seems typical.\n\t// kL should be increased for lightness texture or noise\n\t// and kC increased for chroma noise\n\n\tlet [L1, a1, b1] = color.lab;\n\tlet C1 = color.chroma;\n\tlet [L2, a2, b2] = sample.lab;\n\tlet C2 = sample.chroma;\n\n\t// Check for negative Chroma,\n\t// which might happen through\n\t// direct user input of LCH values\n\n\tif (C1 < 0) {\n\t\tC1 = 0;\n\t}\n\tif (C2 < 0) {\n\t\tC2 = 0;\n\t}\n\n\tlet Cbar = (C1 + C2)/2; // mean Chroma\n\n\t// calculate a-axis asymmetry factor from mean Chroma\n\t// this turns JND ellipses for near-neutral colors back into circles\n\tlet C7 = Math.pow(Cbar, 7);\n\tconst Gfactor = Math.pow(25, 7);\n\tlet G = 0.5 * (1 - Math.sqrt(C7/(C7+Gfactor)));\n\n\t// scale a axes by asymmetry factor\n\t// this by the way is why there is no Lab2000 colorspace\n\tlet adash1 = (1 + G) * a1;\n\tlet adash2 = (1 + G) * a2;\n\n\t// calculate new Chroma from scaled a and original b axes\n\tlet Cdash1 = Math.sqrt(adash1 ** 2 + b1 ** 2);\n\tlet Cdash2 = Math.sqrt(adash2 ** 2 + b2 ** 2);\n\n\t// calculate new hues, with zero hue for true neutrals\n\t// and in degrees, not radians\n\tconst π = Math.PI;\n\tconst r2d = 180 / π;\n\tconst d2r = π / 180;\n\tlet h1 = (adash1 === 0 && b1 === 0)? 0: Math.atan2(b1, adash1);\n\tlet h2 = (adash2 === 0 && b2 === 0)? 0: Math.atan2(b2, adash2);\n\n\tif (h1 < 0) {\n\t\th1 += 2 * π;\n\t}\n\tif (h2 < 0) {\n\t\th2 += 2 * π;\n\t}\n\n\th1 *= r2d;\n\th2 *= r2d;\n\n\t// Lightness and Chroma differences; sign matters\n\tlet ΔL = L2 - L1;\n\tlet ΔC = Cdash2 - Cdash1;\n\n\t// Hue difference, getting the sign correct\n\tlet hdiff = h2 - h1;\n\tlet hsum = h1 + h2;\n\tlet habs = Math.abs(hdiff);\n\tlet Δh;\n\n\tif (Cdash1 * Cdash2 === 0) {\n\t\tΔh = 0;\n\t}\n\telse if (habs <= 180) {\n\t\tΔh = hdiff;\n\t}\n\telse if (hdiff > 180) {\n\t\tΔh = hdiff - 360;\n\t}\n\telse if (hdiff < -180) {\n\t\tΔh = hdiff + 360;\n\t}\n\telse {\n\t\tconsole.log(\"the unthinkable has happened\");\n\t}\n\n\t// weighted Hue difference, more for larger Chroma\n\tlet ΔH = 2 * Math.sqrt(Cdash2 * Cdash1) * Math.sin(Δh * d2r / 2);\n\n\t// calculate mean Lightness and Chroma\n\tlet Ldash = (L1 + L2)/2;\n\tlet Cdash = (Cdash1 + Cdash2)/2;\n\tlet Cdash7 = Math.pow(Cdash, 7);\n\n\t// Compensate for non-linearity in the blue region of Lab.\n\t// Four possibilities for hue weighting factor,\n\t// depending on the angles, to get the correct sign\n\tlet hdash;\n\tif (Cdash1 * Cdash2 === 0) {\n\t\thdash = hsum;   // which should be zero\n\t}\n\telse if (habs <= 180) {\n\t\thdash = hsum / 2;\n\t}\n\telse if (hsum < 360) {\n\t\thdash = (hsum + 360) / 2;\n\t}\n\telse {\n\t\thdash = (hsum - 360) / 2;\n\t}\n\n\t// positional corrections to the lack of uniformity of CIELAB\n\t// These are all trying to make JND ellipsoids more like spheres\n\n\t// SL Lightness crispening factor\n\t// a background with L=50 is assumed\n\tlet lsq = (Ldash - 50) ** 2;\n\tlet SL = 1 + ((0.015 * lsq) / Math.sqrt(20 + lsq));\n\n\t// SC Chroma factor, similar to those in CMC and deltaE 94 formulae\n\tlet SC = 1 + 0.045 * Cdash;\n\n\t// Cross term T for blue non-linearity\n\tlet T = 1;\n\tT -= (0.17 * Math.cos((     hdash - 30)  * d2r));\n\tT += (0.24 * Math.cos(  2 * hdash        * d2r));\n\tT += (0.32 * Math.cos(((3 * hdash) + 6)  * d2r));\n\tT -= (0.20 * Math.cos(((4 * hdash) - 63) * d2r));\n\n\t// SH Hue factor depends on Chroma,\n\t// as well as adjusted hue angle like deltaE94.\n\tlet SH = 1 + 0.015 * Cdash * T;\n\n\t// RT Hue rotation term compensates for rotation of JND ellipses\n\t// and Munsell constant hue lines\n\t// in the medium-high Chroma blue region\n\t// (Hue 225 to 315)\n\tlet Δθ = 30 * Math.exp(-1 * (((hdash - 275)/25) ** 2));\n\tlet RC = 2 * Math.sqrt(Cdash7/(Cdash7 + Gfactor));\n\tlet RT = -1 * Math.sin(2 * Δθ * d2r) * RC;\n\n\t// Finally calculate the deltaE, term by term as root sume of squares\n\tlet dE = (ΔL / (kL * SL)) ** 2;\n\tdE += (ΔC / (kC * SC)) ** 2;\n\tdE += (ΔH / (kH * SH)) ** 2;\n\tdE += RT * (ΔC / (kC * SC)) * (ΔH / (kH * SH));\n\treturn Math.sqrt(dE);\n\t// Yay!!!\n};\n\nColor.statify([\"deltaE2000\"]);\n","import Color from \"../spaces/jzazbz.js\";\nimport \"../spaces/jzczhz.js\";\n\n// More accurate color-difference formulae\n// than the simple 1976 Euclidean distance in Lab\n\n// Uses JzCzHz, which has improved perceptual uniformity\n// and thus a simple Euclidean root-sum of ΔL² ΔC² ΔH²\n// gives good results.\n\nColor.prototype.deltaEJz = function (sample) {\n\tlet color = this;\n\tsample = Color.get(sample);\n\n\t// Given this color as the reference\n\t// and a sample,\n\t// calculate deltaE in JzCzHz.\n\n\tlet [Jz1, Cz1, Hz1] = color.jzczhz;\n\tlet [Jz2, Cz2, Hz2] = sample.jzczhz;\n\n\t// Lightness and Chroma differences\n\t// sign does not matter as they are squared.\n\tlet ΔJ = Jz1 - Jz2;\n\tlet ΔC = Cz1 - Cz2;\n\n\t// length of chord for ΔH\n\tif ((Number.isNaN(Hz1)) && (Number.isNaN(Hz2))) {\n\t\t// both undefined hues\n\t\tHz1 = 0;\n\t\tHz2 = 0;\n\t} else\n\tif (Number.isNaN(Hz1)) {\n\t\t// one undefined, set to the defined hue\n\t\tHz1 = Hz2;\n\t} else\n\tif (Number.isNaN(Hz2)) {\n\t\tHz2 = Hz1;\n\t}\n\n\tlet Δh = Hz1 - Hz2;\n\tlet ΔH = 2 * Math.sqrt(Cz1 * Cz2) * Math.sin((Δh / 2) * (Math.PI / 180));\n\n\treturn Math.sqrt(ΔJ ** 2 + ΔC ** 2 + ΔH ** 2);\n};\n\nColor.statify([\"deltaEJz\"]);\n","import Color from \"../spaces/ictcp.js\";\n\n// Delta E in ICtCp space,\n// which the ITU calls Delta E ITP, which is shorter\n// formulae from ITU Rec. ITU-R BT.2124-0\n\nColor.prototype.deltaEITP = function (sample) {\n\tlet color = this;\n\tsample = Color.get(sample);\n\n\t// Given this color as the reference\n\t// and a sample,\n\t// calculate deltaE in ICtCp\n\t// which is simply the Euclidean distance\n\n\tlet [ I1, T1, P1 ] = color.ictcp;\n\tlet [ I2, T2, P2 ] = sample.ictcp;\n\n\t// the 0.25 factor is to undo the encoding scaling in Ct\n\t// the 720 is so that 1 deltaE = 1 JND\n\t// per  ITU-R BT.2124-0 p.3\n\n\treturn 720 * Math.sqrt((I1 - I2) ** 2 + (0.25 * (T1 -T2) ** 2) + (P1 - P2) ** 2);\n}\n\nColor.statify([\"deltaEITP\"]);\n","import Color from \"../spaces/oklab.js\";\n// More accurate color-difference formulae\n// than the simple 1976 Euclidean distance in CIE Lab\n\n\nColor.prototype.deltaEOK = function (sample, deltas = {}) {\n\tlet color = this;\n\tsample = Color.get(sample);\n\n\t// Given this color as the reference\n\t// and a sample,\n\t// calculate deltaEOK, term by term as root sum of squares\n\tlet [L1, a1, b1] = color.oklab;\n\tlet [L2, a2, b2] = sample.oklab;\n\tlet ΔL = L1 - L2;\n\tlet Δa = a1 - a2;\n\tlet Δb = b1 - b2;\n\treturn Math.sqrt(ΔL ** 2 + Δa ** 2 + Δb ** 2);\n};\n\nColor.statify([\"deltaEOK\"]);\n","/* Parse color keywords without the browser DOM\n * This is only needed to parse Color keywords in Node,\n * and to improve performance when parsing color keywords in the browser\n * To take advantage of this, just import the module.\n * You can also take advantage of its default exports, if you need a data structure of named colors\n * Note that this does not handle currentColor\n */\nimport Color, {util} from \"./color.js\";\n\n// To produce: Visit https://www.w3.org/TR/css-color-4/#named-colors\n// and run in the console:\n// copy($$(\"tr\", $(\".named-color-table tbody\")).map(tr => `\"${tr.cells[2].textContent.trim()}\": [${tr.cells[4].textContent.trim().split(/\\s+/).map(c => c === \"0\"? \"0\" : c === \"255\"? \"1\" : c + \" / 255\").join(\", \")}]`).join(\",\\n\"))\nconst KEYWORDS = {\n\t\"aliceblue\": [240 / 255, 248 / 255, 1],\n\t\"antiquewhite\": [250 / 255, 235 / 255, 215 / 255],\n\t\"aqua\": [0, 1, 1],\n\t\"aquamarine\": [127 / 255, 1, 212 / 255],\n\t\"azure\": [240 / 255, 1, 1],\n\t\"beige\": [245 / 255, 245 / 255, 220 / 255],\n\t\"bisque\": [1, 228 / 255, 196 / 255],\n\t\"black\": [0, 0, 0],\n\t\"blanchedalmond\": [1, 235 / 255, 205 / 255],\n\t\"blue\": [0, 0, 1],\n\t\"blueviolet\": [138 / 255, 43 / 255, 226 / 255],\n\t\"brown\": [165 / 255, 42 / 255, 42 / 255],\n\t\"burlywood\": [222 / 255, 184 / 255, 135 / 255],\n\t\"cadetblue\": [95 / 255, 158 / 255, 160 / 255],\n\t\"chartreuse\": [127 / 255, 1, 0],\n\t\"chocolate\": [210 / 255, 105 / 255, 30 / 255],\n\t\"coral\": [1, 127 / 255, 80 / 255],\n\t\"cornflowerblue\": [100 / 255, 149 / 255, 237 / 255],\n\t\"cornsilk\": [1, 248 / 255, 220 / 255],\n\t\"crimson\": [220 / 255, 20 / 255, 60 / 255],\n\t\"cyan\": [0, 1, 1],\n\t\"darkblue\": [0, 0, 139 / 255],\n\t\"darkcyan\": [0, 139 / 255, 139 / 255],\n\t\"darkgoldenrod\": [184 / 255, 134 / 255, 11 / 255],\n\t\"darkgray\": [169 / 255, 169 / 255, 169 / 255],\n\t\"darkgreen\": [0, 100 / 255, 0],\n\t\"darkgrey\": [169 / 255, 169 / 255, 169 / 255],\n\t\"darkkhaki\": [189 / 255, 183 / 255, 107 / 255],\n\t\"darkmagenta\": [139 / 255, 0, 139 / 255],\n\t\"darkolivegreen\": [85 / 255, 107 / 255, 47 / 255],\n\t\"darkorange\": [1, 140 / 255, 0],\n\t\"darkorchid\": [153 / 255, 50 / 255, 204 / 255],\n\t\"darkred\": [139 / 255, 0, 0],\n\t\"darksalmon\": [233 / 255, 150 / 255, 122 / 255],\n\t\"darkseagreen\": [143 / 255, 188 / 255, 143 / 255],\n\t\"darkslateblue\": [72 / 255, 61 / 255, 139 / 255],\n\t\"darkslategray\": [47 / 255, 79 / 255, 79 / 255],\n\t\"darkslategrey\": [47 / 255, 79 / 255, 79 / 255],\n\t\"darkturquoise\": [0, 206 / 255, 209 / 255],\n\t\"darkviolet\": [148 / 255, 0, 211 / 255],\n\t\"deeppink\": [1, 20 / 255, 147 / 255],\n\t\"deepskyblue\": [0, 191 / 255, 1],\n\t\"dimgray\": [105 / 255, 105 / 255, 105 / 255],\n\t\"dimgrey\": [105 / 255, 105 / 255, 105 / 255],\n\t\"dodgerblue\": [30 / 255, 144 / 255, 1],\n\t\"firebrick\": [178 / 255, 34 / 255, 34 / 255],\n\t\"floralwhite\": [1, 250 / 255, 240 / 255],\n\t\"forestgreen\": [34 / 255, 139 / 255, 34 / 255],\n\t\"fuchsia\": [1, 0, 1],\n\t\"gainsboro\": [220 / 255, 220 / 255, 220 / 255],\n\t\"ghostwhite\": [248 / 255, 248 / 255, 1],\n\t\"gold\": [1, 215 / 255, 0],\n\t\"goldenrod\": [218 / 255, 165 / 255, 32 / 255],\n\t\"gray\": [128 / 255, 128 / 255, 128 / 255],\n\t\"green\": [0, 128 / 255, 0],\n\t\"greenyellow\": [173 / 255, 1, 47 / 255],\n\t\"grey\": [128 / 255, 128 / 255, 128 / 255],\n\t\"honeydew\": [240 / 255, 1, 240 / 255],\n\t\"hotpink\": [1, 105 / 255, 180 / 255],\n\t\"indianred\": [205 / 255, 92 / 255, 92 / 255],\n\t\"indigo\": [75 / 255, 0, 130 / 255],\n\t\"ivory\": [1, 1, 240 / 255],\n\t\"khaki\": [240 / 255, 230 / 255, 140 / 255],\n\t\"lavender\": [230 / 255, 230 / 255, 250 / 255],\n\t\"lavenderblush\": [1, 240 / 255, 245 / 255],\n\t\"lawngreen\": [124 / 255, 252 / 255, 0],\n\t\"lemonchiffon\": [1, 250 / 255, 205 / 255],\n\t\"lightblue\": [173 / 255, 216 / 255, 230 / 255],\n\t\"lightcoral\": [240 / 255, 128 / 255, 128 / 255],\n\t\"lightcyan\": [224 / 255, 1, 1],\n\t\"lightgoldenrodyellow\": [250 / 255, 250 / 255, 210 / 255],\n\t\"lightgray\": [211 / 255, 211 / 255, 211 / 255],\n\t\"lightgreen\": [144 / 255, 238 / 255, 144 / 255],\n\t\"lightgrey\": [211 / 255, 211 / 255, 211 / 255],\n\t\"lightpink\": [1, 182 / 255, 193 / 255],\n\t\"lightsalmon\": [1, 160 / 255, 122 / 255],\n\t\"lightseagreen\": [32 / 255, 178 / 255, 170 / 255],\n\t\"lightskyblue\": [135 / 255, 206 / 255, 250 / 255],\n\t\"lightslategray\": [119 / 255, 136 / 255, 153 / 255],\n\t\"lightslategrey\": [119 / 255, 136 / 255, 153 / 255],\n\t\"lightsteelblue\": [176 / 255, 196 / 255, 222 / 255],\n\t\"lightyellow\": [1, 1, 224 / 255],\n\t\"lime\": [0, 1, 0],\n\t\"limegreen\": [50 / 255, 205 / 255, 50 / 255],\n\t\"linen\": [250 / 255, 240 / 255, 230 / 255],\n\t\"magenta\": [1, 0, 1],\n\t\"maroon\": [128 / 255, 0, 0],\n\t\"mediumaquamarine\": [102 / 255, 205 / 255, 170 / 255],\n\t\"mediumblue\": [0, 0, 205 / 255],\n\t\"mediumorchid\": [186 / 255, 85 / 255, 211 / 255],\n\t\"mediumpurple\": [147 / 255, 112 / 255, 219 / 255],\n\t\"mediumseagreen\": [60 / 255, 179 / 255, 113 / 255],\n\t\"mediumslateblue\": [123 / 255, 104 / 255, 238 / 255],\n\t\"mediumspringgreen\": [0, 250 / 255, 154 / 255],\n\t\"mediumturquoise\": [72 / 255, 209 / 255, 204 / 255],\n\t\"mediumvioletred\": [199 / 255, 21 / 255, 133 / 255],\n\t\"midnightblue\": [25 / 255, 25 / 255, 112 / 255],\n\t\"mintcream\": [245 / 255, 1, 250 / 255],\n\t\"mistyrose\": [1, 228 / 255, 225 / 255],\n\t\"moccasin\": [1, 228 / 255, 181 / 255],\n\t\"navajowhite\": [1, 222 / 255, 173 / 255],\n\t\"navy\": [0, 0, 128 / 255],\n\t\"oldlace\": [253 / 255, 245 / 255, 230 / 255],\n\t\"olive\": [128 / 255, 128 / 255, 0],\n\t\"olivedrab\": [107 / 255, 142 / 255, 35 / 255],\n\t\"orange\": [1, 165 / 255, 0],\n\t\"orangered\": [1, 69 / 255, 0],\n\t\"orchid\": [218 / 255, 112 / 255, 214 / 255],\n\t\"palegoldenrod\": [238 / 255, 232 / 255, 170 / 255],\n\t\"palegreen\": [152 / 255, 251 / 255, 152 / 255],\n\t\"paleturquoise\": [175 / 255, 238 / 255, 238 / 255],\n\t\"palevioletred\": [219 / 255, 112 / 255, 147 / 255],\n\t\"papayawhip\": [1, 239 / 255, 213 / 255],\n\t\"peachpuff\": [1, 218 / 255, 185 / 255],\n\t\"peru\": [205 / 255, 133 / 255, 63 / 255],\n\t\"pink\": [1, 192 / 255, 203 / 255],\n\t\"plum\": [221 / 255, 160 / 255, 221 / 255],\n\t\"powderblue\": [176 / 255, 224 / 255, 230 / 255],\n\t\"purple\": [128 / 255, 0, 128 / 255],\n\t\"rebeccapurple\": [102 / 255, 51 / 255, 153 / 255],\n\t\"red\": [1, 0, 0],\n\t\"rosybrown\": [188 / 255, 143 / 255, 143 / 255],\n\t\"royalblue\": [65 / 255, 105 / 255, 225 / 255],\n\t\"saddlebrown\": [139 / 255, 69 / 255, 19 / 255],\n\t\"salmon\": [250 / 255, 128 / 255, 114 / 255],\n\t\"sandybrown\": [244 / 255, 164 / 255, 96 / 255],\n\t\"seagreen\": [46 / 255, 139 / 255, 87 / 255],\n\t\"seashell\": [1, 245 / 255, 238 / 255],\n\t\"sienna\": [160 / 255, 82 / 255, 45 / 255],\n\t\"silver\": [192 / 255, 192 / 255, 192 / 255],\n\t\"skyblue\": [135 / 255, 206 / 255, 235 / 255],\n\t\"slateblue\": [106 / 255, 90 / 255, 205 / 255],\n\t\"slategray\": [112 / 255, 128 / 255, 144 / 255],\n\t\"slategrey\": [112 / 255, 128 / 255, 144 / 255],\n\t\"snow\": [1, 250 / 255, 250 / 255],\n\t\"springgreen\": [0, 1, 127 / 255],\n\t\"steelblue\": [70 / 255, 130 / 255, 180 / 255],\n\t\"tan\": [210 / 255, 180 / 255, 140 / 255],\n\t\"teal\": [0, 128 / 255, 128 / 255],\n\t\"thistle\": [216 / 255, 191 / 255, 216 / 255],\n\t\"tomato\": [1, 99 / 255, 71 / 255],\n\t\"turquoise\": [64 / 255, 224 / 255, 208 / 255],\n\t\"violet\": [238 / 255, 130 / 255, 238 / 255],\n\t\"wheat\": [245 / 255, 222 / 255, 179 / 255],\n\t\"white\": [1, 1, 1],\n\t\"whitesmoke\": [245 / 255, 245 / 255, 245 / 255],\n\t\"yellow\": [1, 1, 0],\n\t\"yellowgreen\": [154 / 255, 205 / 255, 50 / 255]\n};\n\nColor.hooks.add(\"parse-start\", env => {\n\tlet str = env.str.toLowerCase();\n\tlet ret = {spaceId: \"srgb\", coords: null, alpha: 1};\n\n\tif (str === \"transparent\") {\n\t\tret.coords = KEYWORDS.black;\n\t\tret.alpha = 0;\n\t}\n\telse {\n\t\tret.coords = KEYWORDS[str];\n\t}\n\n\tif (ret.coords) {\n\t\tenv.color = ret;\n\t}\n});\n\nexport default KEYWORDS;\n","// Import all modules of Color.js\nimport Color, {util} from \"./color.js\";\n\n// Import color spaces\nimport \"./spaces/lab.js\";\nimport \"./spaces/lch.js\";\nimport \"./spaces/srgb.js\";\nimport \"./spaces/srgb-linear.js\";\nimport \"./spaces/hsl.js\";\nimport \"./spaces/hwb.js\";\nimport \"./spaces/hsv.js\";\nimport \"./spaces/p3.js\";\nimport \"./spaces/a98rgb.js\";\nimport \"./spaces/prophoto.js\";\nimport \"./spaces/rec2020.js\";\nimport \"./spaces/absxyzd65.js\";\nimport \"./spaces/jzazbz.js\";\nimport \"./spaces/jzczhz.js\";\nimport \"./spaces/ictcp.js\";\nimport \"./spaces/rec2100.js\";\nimport \"./spaces/oklab.js\";\nimport \"./spaces/oklch.js\";\nimport \"./spaces/acescc.js\";\n\n\n// Import optional modules\nimport \"./interpolation.js\";\nimport \"./deltaE/deltaECMC.js\";\nimport \"./deltaE/deltaE2000.js\";\nimport \"./deltaE/deltaEJz.js\";\nimport \"./deltaE/deltaEITP.js\";\nimport \"./deltaE/deltaEOK.js\";\nimport \"./CATs.js\";\nimport \"./keywords.js\";\n\n// Re-export everything\nexport default Color;\nexport {util};\n"],"names":["util.isString","util.extend","value","util.type","util.value","util.toPrecision","util.parseCoord","util.multiplyMatrices","type","util.copyDescriptor","angles.range","angles.constrain","angles.adjust"],"mappings":"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"}